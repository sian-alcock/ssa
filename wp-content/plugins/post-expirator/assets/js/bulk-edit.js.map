{"version":3,"file":"bulk-edit.js","mappings":"wFAI4BA,EAAAA,aAAA,SAAUC,GAClC,OACI,+BACKA,EAAMC,SAGlB,C,+FCPD,UACA,UAE+BC,EAAAA,gBAAA,SAAUF,GAAO,IAGxCG,EAHwC,E,2YAAA,EACd,IAAAC,UAASJ,EAAMK,UAAW,GADZ,GACrCA,EADqC,KAC5BC,EAD4B,KAoB5C,OAbIH,EAFAH,EAAMO,qBAEQ,yBAAGC,UAAU,cAAcC,wBAAyB,CAAEC,OAAQV,EAAMG,eAEpE,yBAAGK,UAAU,eAAeR,EAAMG,aAYhD,oBAAC,EAAAQ,SAAD,KACI,oBAAC,kBAAD,CACIC,MAAOZ,EAAMY,MACbC,KAAMb,EAAMa,KACZC,GAAId,EAAMa,KACVL,UAAWR,EAAMQ,UACjBH,QAASA,IAAW,EACpBU,SAhBK,SAAUC,GACvBV,EAAWU,GAEPhB,EAAMe,UACNf,EAAMe,SAASC,EAEtB,IAaQb,EAGZ,C,+eCxCD,UAMA,UACA,UAEAc,EAAQ,MAED,IAAMC,EAAoBA,EAAAA,kBAAA,SAAC,GAS5B,IARFC,EAQE,EARFA,OACAP,EAOE,EAPFA,MACAQ,EAME,EANFA,iBACAC,EAKE,EALFA,mBACAC,EAIE,EAJFA,2BACAC,EAGE,EAHFA,gCACAC,EAEE,EAFFA,wBAEE,IADFC,YAAAA,OACE,YACwC,IAAArB,UAAS,IADjD,SACKsB,EADL,KACoBC,EADpB,QAEoC,IAAAvB,YAFpC,SAEKwB,EAFL,KAEkBC,EAFlB,KAIIC,GAA0B,IAAAC,QAAO,IAAIC,kBA+C3C,IAAAC,YAAU,YA7CiB,WACvB,GAAId,EAAQ,CACR,IAAMe,EAAaJ,EAAwBK,QAEvCD,GACAA,EAAWE,QAGfN,EAAwBK,QAAU,IAAIH,gBAP9B,IAQAK,EAAWP,EAAwBK,QAAnCE,OAERd,GAAgC,IAEhC,IAAAe,UAAS,CACLC,MAAM,IAAAC,cAAA,0DACNC,OAAQ,OACRC,KAAM,CACFvB,OAAAA,GAEJkB,OAAAA,IACDM,MAAK,SAACC,GACLrB,GAAgC,GAEhCC,EAAwBoB,EAAOC,SAC/BvB,EAA2BsB,EAAOE,SAE9BF,EAAOC,SACPlB,EAAiBiB,EAAOG,SACxBlB,EAAee,EAAOhB,cAEtBD,EAAiB,GAExB,IAAEqB,OAAM,SAACC,GACa,eAAfA,EAAMpC,OAIVU,GAAgC,GAChCC,GAAwB,GACxBF,EAA2B2B,EAAMH,SACjCnB,EAAiB,IACpB,GACJ,CACJ,CAGGuB,EACH,GAAE,CAAC/B,IAEJ,IAAMgC,EAAe1B,EAAc,WAAa,GAEhD,OACI,oBAAC,EAAAd,SAAD,KACMQ,GACE,2BAAKX,UAAW,mCAAqC2C,GACjD,8BAAMvC,GACN,2BAAKJ,UAAU,yCACX,+BACI,4BAAMA,UAAU,0CAA2CY,EAA3D,MACA,4BAAMZ,UAAU,0CAA0CoB,IAE9D,+BACI,4BAAMpB,UAAU,0CAA2Ca,EAA3D,MACA,4BAAMb,UAAU,0CAA0CkB,MAOrF,E,UAEcR,C,0FClGf,cACA,UAG8BkC,EAAAA,eAAA,SAAC,GAAmD,IAAlDC,EAAkD,EAAlDA,YAAatC,EAAqC,EAArCA,SAAUuC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAK7D,MAJ2B,iBAAhBF,IACPA,GAAc,IAAAG,iCAAgCH,IAI9C,oBAAC,iBAAD,CACIA,YAAaA,EACbtC,SAAUA,EACV0C,wBAAwB,EACxBH,SAAUA,EACVC,YAAaA,GAGxB,C,2rBClBD,UACA,UACA,UACA,UACA,UACA,U,EAE2FG,GAAGC,WAAtFC,EAAAA,EAAAA,SAAU1D,EAAAA,EAAAA,gBAAiB2D,EAAAA,EAAAA,cAAeC,EAAAA,EAAAA,eAAgBC,EAAAA,EAAAA,QAASC,EAAAA,EAAAA,Y,EACjCN,GAAGO,QAArCtD,EAAAA,EAAAA,SAAUsB,EAAAA,EAAAA,UAAW7B,EAAAA,EAAAA,SACrB8D,EAAmBR,GAAGS,aAAtBD,eACA1B,EAAiBkB,GAAGU,IAApB5B,a,EAIJkB,GAAGhB,KAFH2B,EAAAA,EAAAA,UACAC,EAAAA,EAAAA,YAEIhC,EAAaoB,GAAbpB,SAEyBiC,EAAAA,kBAAA,SAACvE,GAAU,MAcpCqE,GAAU,SAACG,GACX,MAAO,CACHC,OAAQD,EAAOxE,EAAM0E,WAAWC,YAChCC,KAAMJ,EAAOxE,EAAM0E,WAAWG,UAC9BC,QAASN,EAAOxE,EAAM0E,WAAWK,aACjCC,MAAOR,EAAOxE,EAAM0E,WAAWO,WAC/BC,SAAUV,EAAOxE,EAAM0E,WAAWS,cAClCC,aAAcZ,EAAOxE,EAAM0E,WAAWW,kBACtCC,gBAAiBd,EAAOxE,EAAM0E,WAAWa,qBACzCC,cAAehB,EAAOxE,EAAM0E,WAAWe,mBACvCC,gBAAiBlB,EAAOxE,EAAM0E,WAAWiB,qBACzCC,kBAAmBpB,EAAOxE,EAAM0E,WAAWmB,uBAC3CC,aAActB,EAAOxE,EAAM0E,WAAWqB,kBACtCC,UAAWxB,EAAOxE,EAAM0E,WAAWuB,eAE1C,IA3BGxB,EAFoC,EAEpCA,OACAG,EAHoC,EAGpCA,KACAE,EAJoC,EAIpCA,QACAE,EALoC,EAKpCA,MACAE,EANoC,EAMpCA,SACAE,EAPoC,EAOpCA,aACAE,EARoC,EAQpCA,gBACAE,EAToC,EASpCA,cACAE,EAVoC,EAUpCA,gBACAE,EAXoC,EAWpCA,kBACAE,EAZoC,EAYpCA,aACAE,EAboC,EAapCA,UAboC,EA+BM5F,EAAS,IA/Bf,SA+BjC8F,EA/BiC,KA+BhBC,EA/BgB,OA8CpC7B,EAAYtE,EAAM0E,WAZlB0B,EAlCoC,EAkCpCA,UACAC,EAnCoC,EAmCpCA,QACAC,EApCoC,EAoCpCA,WACAC,EArCoC,EAqCpCA,SACAC,EAtCoC,EAsCpCA,YACAC,EAvCoC,EAuCpCA,mBACAC,EAxCoC,EAwCpCA,iBACAC,EAzCoC,EAyCpCA,gBACAC,EA1CoC,EA0CpCA,mBACAC,EA3CoC,EA2CpCA,qBACAC,EA5CoC,EA4CpCA,gBACAC,EA7CoC,EA6CpCA,aAaEC,EAAa,SAACC,GAChB3B,EAAgB2B,GAAQ,CAAEnG,GAAImG,EAAMC,MAAO,EAAG/G,YAAa,GAAIgH,KAAM,GAAItG,KAAMoG,EAAMG,KAAMH,EAAM/B,SAAUA,GAC3GM,EAAcyB,GAAQA,EACtBR,EAAmBnB,GACnBoB,EAAiBlB,GACjBe,EAAAA,GAAAA,O,sHAAAA,CAAavB,GAAb,CAAoBiC,IAEvB,EAkBKI,GAAmB,SAACC,EAAWtG,GACC,mBAAvBhB,EAAMuH,cACbvH,EAAMuH,aAAaD,EAAWtG,EAErC,EAEKwG,GAAsB,SAACC,GACzBnB,EAAWmB,GAEPA,IACArB,EAAUpG,EAAMyE,QAChB4B,EAAQrG,EAAM4E,MACdmC,EAAa/G,EAAMgG,WACnBO,EAASvG,EAAMgF,OACfwB,EAAYxG,EAAMkF,UAElBwC,MAGJL,GAAiB,UAAWI,EAC/B,EA4BKC,GAAa,WACf,IAAIpC,EAAkB,CAAC,EACnBE,EAAgB,CAAC,EAEhBN,IAIL0B,GAAmB,GAEnBtE,EAAS,CACLC,KAAMC,EAAa,gCAAgC0C,KACpDvC,MAAK,SAACC,GACLA,EAAOoC,MAAM2C,SAAQ,SAAAV,GACjB3B,EAAgBpB,EAAe+C,EAAKpG,OAASoG,EAC7CzB,EAAcyB,EAAKnG,IAAMoD,EAAe+C,EAAKpG,KAChD,IAED4F,EAAmBnB,GACnBoB,EAAiBlB,GACjBmB,EAAgBzC,EAAetB,EAAOwC,eACtCwB,GAAmB,EACtB,IACJ,EAMKgB,GAAkC,WACpC,OAAOC,aAAaC,QAAQ,qCAAuC9H,EAAM+H,QAC5E,EAED9F,GAAU,WACFjC,EAAMgI,0BACN1B,GAAW,GAEXA,EAAWtG,EAAM8E,SAGrBsB,EAAUpG,EAAMyE,QAChBsC,EAAa/G,EAAMgG,WACnBK,EAAQrG,EAAM4E,MACd2B,EAASvG,EAAMgF,OACfwB,EAAYxG,EAAMkF,UAEwB,OAAtC0C,KACAf,EAAqB7G,EAAM4F,mBAE3BiB,EAA2D,MAAtCe,OAA+C5H,EAAMiI,uBAI1EjI,EAAM8E,UACF9E,EAAMkI,gBAENV,IAAoB,GAGxBE,KAEP,GAAE,IAEHzF,GAAU,WAtC8B,IAACjB,IAuCL4E,EAtChCiC,aAAaM,QAAQ,qCAAuCnI,EAAM+H,QAAS/G,EAAQ,IAAM,IAuC5F,GAAE,CAAC4E,IAEJ3D,GAAU,WACF6D,GAAgB9F,EAAMoI,eACtBpI,EAAMoI,iBAGLtC,GAAgB9F,EAAMqI,iBACvBrI,EAAMqI,iBAEb,GAAE,CAACvC,IAEJ,IAAIwC,GAAgB,GAChBtD,GAASA,EAAMuD,OAAS,GAAK/C,IAC7B8C,IAAgB,IAAAE,SAlKK,SAACxD,GACtB,MAAqB,iBAAjB,IAAOA,EAAP,cAAOA,KAAgC,OAAVA,EACtB,CAAC,EAGLA,EAAMyD,KAAI,SAACxB,GACd,OAAOzB,EAAcyB,EACxB,GACJ,CA0J2ByB,CAAiB1D,IAEZ,iBAAlBsD,KACPA,GAAgB,KAIxB,IAAIK,GAAsB,GACK,iBAA3B,IAAOrD,EAAP,cAAOA,KAAoD,OAApBA,IACvCqD,GAAsBC,OAAOC,KAAKvD,IAGtC,IAIIwD,GAJEC,GAAanD,EAAoB,sBAAwB,sCACzDoD,GAAoBpD,EAAoB,8BAAgC,8CACxEqD,GAAiBrD,EAAoB,2BAA6B,2CAIpEkD,GADqB,cAArB9I,EAAMkJ,YACMlJ,EAAMsD,SAEc,QAArBtD,EAAMkJ,WAGrB,IAoBIC,GAAuBnJ,EAAMmJ,qBAC5BnJ,EAAMkF,WACPiE,GAAuBnJ,EAAMmJ,qBAAqBC,QAAO,SAACC,GACtD,OAAuG,IAAhG,CAAC,WAAY,eAAgB,kBAAmB,uBAAuBC,QAAQD,EAAKrI,MAC9F,KAGL,IAAMuI,GA3B+B,SAACC,EAAQC,EAAMC,GAChD,IAAMC,EAAQH,EAAOI,MAAM,KACrBhH,EAAS,GAEfA,EAAOiH,KAAKF,EAAMG,SAJyC,2BAM3D,YAAmBH,EAAnB,+CAA0B,eACOC,MAAM,KADb,SACfG,EADe,KACPC,EADO,KAGtBpH,EAAOiH,KACH,yBAAGJ,KAAMA,EAAMC,OAiBwG,SAjBxFO,IAAKR,GAAOM,IAG/CnH,EAAOiH,KAAKG,EACf,CAd0D,8EAgB3D,OAAOpH,CACV,CAUgBsH,CAA6BlK,EAAMmK,QAAQC,qBAAsB,iDAC5EC,GAAuBC,OAAO7F,GAAQ8F,SAAS,aAA0B,wBAAX9F,EAEhE+F,GAAkBpF,EACtB,OAAQX,GACJ,IAAK,WACD+F,GAAkBxK,EAAMmK,QAAQM,SAASC,QAAQ,KAAMtF,GACvD,MACJ,IAAK,kBACDoF,GAAkBxK,EAAMmK,QAAQQ,YAAYD,QAAQ,KAAMtF,GAC1D,MACJ,IAAK,eACDoF,GAAkBxK,EAAMmK,QAAQS,SAASF,QAAQ,KAAMtF,GA8D/D,OAnBAnD,GAAU,WACN,IAAK6C,EAID,OAHAgC,GAAgB,QAChBX,EAAmB,IAKvBW,EA/CiB,WACjB,IAAI+D,GAAQ,EAEZ,IAAK/F,EAED,OADAqB,EAAmB,KACZ,EAGN1B,IACD0B,EAAmBnG,EAAMmK,QAAQW,qBACjCD,GAAQ,GAGPjG,IACDuB,EAAmBnG,EAAMmK,QAAQY,mBACjCF,GAAQ,GAIRjG,GAAQ,IAAIoG,KAAKpG,GAAQ,IAAIoG,OAC7B7E,EAAmBnG,EAAMmK,QAAQc,iBACjCJ,GAAQ,GAGZ,IAAMK,EAAiB,CAAC,WAAY,eAAgB,mBAAmBX,SAAS9F,GAC1E0G,EAAoC,IAAjBnG,EAAMuD,QAAkC,IAAjBvD,EAAMuD,SAA8B,KAAbvD,EAAM,IAA0B,MAAbA,EAAM,IAWhG,OATIkG,GAAkBC,IAClBhF,EAAmBnG,EAAMmK,QAAQiB,oBACjCP,GAAQ,GAGRA,GACA1E,EAAmB,IAGhB0E,CACV,CAUmBQ,GACnB,GAAE,CAAC5G,EAAQG,EAAME,EAASE,EAAOE,IAW9B,oBAAC,EAAAoG,iBAAD,KACI,2BAAK9K,UAAWuI,IACX/I,EAAMgI,2BACH,6BAAOuD,KAAK,SAAS1K,KAAM,wBAAyBG,MAAO,IAG/D,oBAAC,EAAAwK,qBAAqBC,KAAtB,CAA2BC,UAAW,CAAEhH,UAAW1E,EAAM0E,cAEvD1E,EAAMgI,2BACJ,oBAACpE,EAAD,KACI,oBAAC1D,EAAD,CACIU,MAAOZ,EAAMmK,QAAQwB,qBACrBtL,QAASyE,IAAW,EACpB/D,SAAUyG,GACVhH,UAAU,mCAKrBsE,GACG,oBAACnE,EAAD,KACI,oBAACiD,EAAD,CAAUpD,UAAWwI,GAAoB,6BACrC,oBAACnF,EAAD,CACIjD,MAAOZ,EAAMmK,QAAQ1F,OACrBzD,MAAOyD,EACPmH,QAASzC,GACTpI,SAhQD,SAACC,GACxBoF,EAAUpF,GAEVqG,GAAiB,SAAUrG,EAC9B,EA6P2BR,UAAU,iCAIlB,oBAAC,EAAAqL,kCAAkCJ,KAAnC,CAAwCC,UAAW,CAAEhH,UAAW1E,EAAM0E,aAE1D,kBAAXD,GACG,oBAACb,EAAD,CAAUpD,UAAU,cAChB,oBAACqD,EAAD,CACIjD,MAAOZ,EAAMmK,QAAQnE,UACrB4F,QAAS5L,EAAM8L,sBACf9K,MAAOgF,EACPjF,SAvQF,SAACC,GAC3B+F,EAAa/F,GAEbqG,GAAiB,YAAarG,EACjC,EAoQ+BR,UAAU,qCAMlB6J,KACI3E,GACI,oBAAC9B,EAAD,KACI,oBAACI,EAAD,CAAapD,MAAOwE,GACZpF,EAAMmK,QAAQ4B,QADtB,KACkC3G,EADlC,IAEI,oBAACrB,EAAD,UAIPmB,GACD,oBAACtB,EAAD,KACI,oBAACI,EAAD,CAAapD,MAAOwE,EAAc5E,UAAU,yBACxC,+BACI,yBAAGA,UAAU,gCADjB,IACqDR,EAAMmK,QAAQ6B,oBAMxC,IAA/BrD,GAAoBJ,QAChB,oBAAC3E,EAAD,KACI,oBAACI,EAAD,CAAapD,MAAOwE,EAAc5E,UAAU,yBACxC,+BACI,yBAAGA,UAAU,gCADjB,IACqDR,EAAMmK,QAAQ8B,iBAM3E,oBAACrI,EAAD,CAAUpD,UAAU,4BAChB,oBAACwD,EAAD,KACI,oBAACF,EAAD,CACIlD,MAAO4J,GACPxJ,MAAOsH,GACP4D,YAAavD,GACb5H,SArS1B,SAACC,GACvBA,EAzDuB,SAACgE,GACxB,MAAqB,iBAAjB,IAAOA,EAAP,cAAOA,KAAgC,OAAVA,EACtB,CAAC,EAGLA,EAAMyD,KAAI,SAACxB,GACd,OAAI3B,EAAgB2B,GACT3B,EAAgB2B,GAAMnG,IAGjCkG,EAAWC,GAEJA,EACV,GACJ,CA2CWkF,CAAmBnL,GAE3BuF,EAASvF,GAETqG,GAAiB,QAASrG,EAC7B,EAgSmDoL,YAAapM,EAAMmK,QAAQkC,oBAC3B7L,UAAU,sBACV8L,eAAgB,IAChBC,QA1Ff,SAACC,GAClCC,OAAOD,EAAE9C,QAAQgD,SAAS,SAC7B,EAyFmDC,6BAA6B,EAC7BC,oCAAoC,OAUpE,oBAAChJ,EAAD,CAAUpD,UAAWyI,IACjB,oBAAC,EAAA4D,yBAAD,CACIxJ,YAAauB,EACbkI,aA9TH,SAAC9L,GACtBqF,EAAQrF,GAERqG,GAAiB,OAAQrG,EAC5B,EA2T2B+L,iBAAkB,kBAAMlG,GAAsBjB,EAA5B,EAClBtC,UAAWwF,GACXvF,YAAavD,EAAMuD,YACnByJ,WAAYpH,EACZuE,QAASnK,EAAMmK,WAIvB,oBAACvG,EAAD,KACI,2BAAKpD,UAAU,2BACX,+BAEA,4BAAMA,UAAU,6BAHpB,IAGwD+I,MAI1DzD,GACE,oBAAClC,EAAD,KACI,oBAACI,EAAD,CAAaxD,UAAU,uBACnB,+BAAM0F,OAO9B,oBAAC,EAAA+G,WAAD,CAAYC,MAAM,wBAG7B,C,qRCleD,UAEarB,EAAoCA,EAAAA,kCAAA,SAAC,GAAD,IAAG5L,EAAH,EAAGA,SAAH,OAC7C,oBAAC,EAAAkN,KAAD,CAAMtM,KAAK,qCACNZ,EAFwC,EAUjD4L,EAAkCJ,KAJY,SAACzL,GAAD,OAC1C,oBAAC,EAAAyL,KAAD,GAAM5K,KAAK,qCAAwCb,GADT,E,UAM/B6L,C,0fCdf,UAE4CuB,EAAAA,6BAAA,SAACpN,GAAU,IAC3CqN,EAA+B3J,GAAG4J,SAAlCD,2BAD2C,EAEnB3J,GAAGhB,KAA3B4B,EAF2C,EAE3CA,YAAaE,EAF8B,EAE9BA,OAEb8I,EAAahJ,EAAY,eAAzBgJ,SAkCF5K,EAAO8B,EAAO,eAAe+I,uBAAuB,8BAtCP,EAwCNjJ,EAAY,eAAjDkJ,EAxC2C,EAwC3CA,eAAgBC,EAxC2B,EAwC3BA,iBAUxB,OACI,oBAACJ,EAAD,CACIxM,KAAM,mCACN6M,MAAO1N,EAAMmK,QAAQwD,WACrBC,YAAa5N,EAAM6N,sBAAsBC,WACzCtN,UAAW,wBACX,2BAAKM,GAAG,oCACJ,oBAAC,EAAAyD,kBAAD,CACIwD,QAAS,eACTgG,SAAU/N,EAAM+N,SAChB7F,eAAgBlI,EAAMkI,eACtBiB,qBAAsBnJ,EAAMmJ,qBAC5B2C,sBAAuB9L,EAAM8L,sBAC7BhH,QAASpC,EAAKoC,QACdc,mBAAmB,EACnBnB,OAAQ/B,EAAK+B,OACbuB,UAAWtD,EAAKsD,UAChBpB,KAAMlC,EAAKkC,KACXI,MAAOtC,EAAKsC,MACZE,SAAUxC,EAAKwC,SACfE,aAAcpF,EAAMoF,aACpBmC,aApDK,SAACD,EAAWtG,GAC7B,IAAMgN,EAAQxJ,EAAOxE,EAAM0E,WAErBuJ,EAAe,CACjB,QAAWD,EAAMjJ,cAGjBkJ,EAAanJ,UACbmJ,EAAA,OAAyBD,EAAMrJ,YAC/BsJ,EAAA,UAA4BD,EAAM/H,eAClCgI,EAAA,KAAuBD,EAAMnJ,UAC7BoJ,EAAA,MAAwBD,EAAM/I,WAC9BgJ,EAAA,SAA2BD,EAAM7I,cACjC8I,EAAA,UAA4BD,EAAME,gBA1BhB,SAACD,GACvB,IAAM3G,EAAY,CACd6G,2BAA4B,CAAC,GAFO,uBAMxC,YAA4BvF,OAAOwF,QAAQH,GAA3C,+CAA0D,wBAA9CpN,EAA8C,KAAxCG,EAAwC,KACtDsG,EAAU6G,2BAA2BtN,GAAQG,CAChD,CARuC,8EAUxCsM,EAAShG,EACZ,CAkBG+G,CAAkBJ,EACrB,EAoCe3K,SAAUtD,EAAMsD,SAChB4F,WAAYlJ,EAAMkJ,WAClB3F,YAAavD,EAAMuD,YACnBmB,UAAW1E,EAAM0E,UACjByF,QAASnK,EAAMmK,QACf/B,cAnCM,WAClBqF,EAAiB,gBACpB,EAkCexF,sBAAuBjI,EAAMiI,sBAC7BI,gBAjCQ,WACpBmF,EAAe,gBAClB,KAmCJ,C,qTCrFD,UACA,UAEyCc,EAAAA,0BAAA,SAACtO,GAAU,MACL0D,GAAGhB,KAAtC2B,EADwC,EACxCA,UAAWC,EAD6B,EAC7BA,YAAaE,EADgB,EAChBA,OACxBvC,EAAcyB,GAAGO,QAAjBhC,UAWF2C,EAAOP,GAAU,SAACG,GAAD,OAAYA,EAAOxE,EAAM0E,WAAWG,SAApC,GAA+C,IAChEC,EAAUT,GAAU,SAACG,GAAD,OAAYA,EAAOxE,EAAM0E,WAAWK,YAApC,GAAkD,IACtEN,EAASJ,GAAU,SAACG,GAAD,OAAYA,EAAOxE,EAAM0E,WAAWC,WAApC,GAAiD,IACpEqB,EAAY3B,GAAU,SAACG,GAAD,OAAYA,EAAOxE,EAAM0E,WAAWuB,cAApC,GAAoD,IAC1EjB,EAAQX,GAAU,SAACG,GAAD,OAAYA,EAAOxE,EAAM0E,WAAWO,UAApC,GAAgD,IAClEC,EAAWb,GAAU,SAACG,GAAD,OAAYA,EAAOxE,EAAM0E,WAAWS,aAApC,GAAmD,IACxEoJ,EAAelK,GAAU,SAACG,GAAD,OAAYA,EAAOxE,EAAM0E,WAAW8J,iBAApC,GAAuD,IAChF1I,EAAezB,GAAU,SAACG,GAAD,OAAYA,EAAOxE,EAAM0E,WAAWqB,iBAApC,GAAuD,IAGlF0I,EACAnK,EAAYtE,EAAM0E,WADlB+J,gBAGAC,EAAc1J,EACG,iBAAjB,IAAOA,EAAP,cAAOA,MACP0J,EAAc1J,EAAM2J,KAAK,MAG7B,IAIM/C,EAAU,CACZ,CAAE5K,MAAO,YAAaJ,MAAOZ,EAAMmK,QAAQyE,UAC3C,CAAE5N,MAAO,aAAcJ,MAAOZ,EAAMmK,QAAQ0E,WAC5C,CAAE7N,MAAO,WAAYJ,MAAOZ,EAAMmK,QAAQ2E,SAC1C,CAAE9N,MAAO,cAAeJ,MAAOZ,EAAMmK,QAAQ4E,YAC7C,CAAE/N,MAAO,cAAeJ,MAAOZ,EAAMmK,QAAQ6E,aAejD,OAVA/M,GAAU,WAGF6D,GAAiC,cAAjByI,EAChB9B,OAAO,cAAcwC,KAAK,YAAY,GAEtCxC,OAAO,cAAcwC,KAAK,YAAY,EAE7C,GAAE,CAACnJ,EAAcyI,IAGd,2BAAK/N,UAAW,wBACZ,oBAAC,EAAAqD,cAAD,CACIjD,MAAOZ,EAAMmK,QAAQ+E,mBACrBrO,KAAM,mCACNG,MAAOuN,EACP3C,QAASA,EACT7K,SA/BiB,SAACC,GAC1ByN,EAAgBzN,EACnB,IAU6B,CAAC,aAAc,WAAY,eAsB1BuJ,SAASgE,IAC5B,oBAAC,EAAAhK,kBAAD,CACIwD,QAAS,YACTC,2BAA2B,EAC3B+F,SAAU/N,EAAM+N,SAChB7F,eAAgBlI,EAAMmP,UACtBhG,qBAAsBnJ,EAAMmJ,qBAC5B2C,sBAAuB9L,EAAM8L,sBAC7BhH,SAAS,EACTc,mBAAmB,EACnBnB,OAAQA,EACRuB,UAAWA,EACXpB,KAAMA,EACNI,MAAOA,EACPE,SAAUA,EACVE,aAAcpF,EAAMoF,aACpBmC,aA7EK,SAACD,EAAWtG,IAC7B,IAAAoO,kBAAiB,8BAA8BpO,MAAQwD,EAAOxE,EAAM0E,WAAWK,aAAe,EAAI,GAClG,IAAAqK,kBAAiB,6BAA6BpO,MAAQwD,EAAOxE,EAAM0E,WAAWC,aAC9E,IAAAyK,kBAAiB,iCAAiCpO,MAAQwD,EAAOxE,EAAM0E,WAAWuB,gBAClF,IAAAmJ,kBAAiB,2BAA2BpO,MAAQwD,EAAOxE,EAAM0E,WAAWG,WAC5E,IAAAuK,kBAAiB,4BAA4BpO,MAAQwD,EAAOxE,EAAM0E,WAAWO,WAAW0J,KAAK,MAC7F,IAAAS,kBAAiB,+BAA+BpO,MAAQwD,EAAOxE,EAAM0E,WAAWS,aACnF,EAuEe7B,SAAUtD,EAAMsD,SAChB4F,WAAYlJ,EAAMkJ,WAClB3F,YAAavD,EAAMuD,YACnBmB,UAAW1E,EAAM0E,UACjBuD,sBAAuBjI,EAAMiI,sBAC7BkC,QAASnK,EAAMmK,UAIvB,6BAAOoB,KAAK,SAAS1K,KAAM,6BAA8BG,MAAO8D,EAAU,EAAI,IAC9E,6BAAOyG,KAAK,SAAS1K,KAAM,4BAA6BG,MAAOyD,IAC/D,6BAAO8G,KAAK,SAAS1K,KAAM,gCAAiCG,MAAOgF,IACnE,6BAAOuF,KAAK,SAAS1K,KAAM,0BAA2BG,MAAO4D,IAC7D,6BAAO2G,KAAK,SAAS1K,KAAM,2BAA4BG,MAAO0N,IAC9D,6BAAOnD,KAAK,SAAS1K,KAAM,8BAA+BG,MAAOkE,IACjE,6BAAOqG,KAAK,SAAS1K,KAAM,0BAA2BG,MAAM,cAC5D,6BAAOuK,KAAK,SAAS1K,KAAM,uBAAwBG,MAAOhB,EAAMqP,QAG3E,C,0GCxGD,cACA,UACA,QAE8CC,EAAAA,+BAAA,SAACtP,IACb,IAAIgL,MAAOuE,oBAAzC,IAEMH,EAAmB,SAACvO,GACtB,OAAO2O,SAASC,kBAAkB5O,GAAM,EAC3C,EA4BK6O,EAAwB,SAAC7O,GAC3B,IAAMoD,EAAUmL,EAAiBvO,GACjC,OAAKoD,EAIEA,EAAQjD,MAHJ,EAId,EAEK0B,EAAO,CACToC,QAA4D,MAAnD4K,EAAsB,yBAC/BjL,OAAQiL,EAAsB,wBAC9B1J,UAAW0J,EAAsB,4BACjC9K,KAAM8K,EAAsB,sBAC5B1K,MA7B8B,SAACnE,GAC/B,IAAMoD,EAAUmL,EA4BiB,uBA3BjC,IAAKnL,EACD,MAAO,GAGX,IAAIe,EAAQf,EAAQjD,MAAM4I,MAAM,KAMhC,OAJqB,IAAjB5E,EAAMuD,QAA6B,KAAbvD,EAAM,KAC5BA,EAAQ,IAGLA,EAAMyD,KAAI,SAAAxB,GAAA,OAAQ0I,SAAS1I,EAAjB,GACpB,CAgBU2I,GACP1K,SAAUwK,EAAsB,2BAWpC,OACI,2BAAKlP,UAAW,wBACZ,oBAAC,EAAA+D,kBAAD,CACIwD,QAAS,iBACTgG,SAAU/N,EAAM+N,SAChB7F,eAAgBlI,EAAMmP,UACtBhG,qBAAsBnJ,EAAMmJ,qBAC5B2C,sBAAuB9L,EAAM8L,sBAC7BhH,QAASpC,EAAKoC,QACdc,mBAAmB,EACnBnB,OAAQ/B,EAAK+B,OACbuB,UAAWtD,EAAKsD,UAChBpB,KAAMlC,EAAKkC,KACXI,MAAOtC,EAAKsC,MACZE,SAAUxC,EAAKwC,SACfE,aAAcpF,EAAMoF,aACpBmC,aApES,SAACD,EAAWtG,GAC7B,IAAMgN,GAAQ,IAAAxJ,QAAOxE,EAAM0E,WAE3B0K,EAAiB,yBAAyBpO,MAAQgN,EAAMjJ,aAAe,EAAI,EAC3EqK,EAAiB,wBAAwBpO,MAAQgN,EAAMrJ,YACvDyK,EAAiB,4BAA4BpO,MAAQgN,EAAM/H,eAC3DmJ,EAAiB,sBAAsBpO,MAAQgN,EAAMnJ,UACrDuK,EAAiB,uBAAuBpO,MAAQgN,EAAM/I,WAAW0J,KAAK,KACtES,EAAiB,0BAA0BpO,MAAQgN,EAAM7I,aAC5D,EA4DW7B,SAAUtD,EAAMsD,SAChB4F,WAAYlJ,EAAMkJ,WAClB3F,YAAavD,EAAMuD,YACnBmB,UAAW1E,EAAM0E,UACjByF,QAASnK,EAAMmK,QACf/B,cA9BU,WAClBqE,OAAO,YAAYwC,KAAK,YAAY,EACvC,EA6BWhH,sBAAuBjI,EAAMiI,sBAC7BI,gBA5BY,WACpBoE,OAAO,YAAYwC,KAAK,YAAY,EACvC,IA6BJ,C,sTC1FD,UACA,UACA,QAE0CY,EAAAA,2BAAA,SAAC7P,GACvC,IAEM4E,GAAO,IAAAP,YAAU,SAACG,GAAD,OAAYA,EAAOxE,EAAM0E,WAAWG,SAApC,GAA+C,IAChEC,GAAU,IAAAT,YAAU,SAACG,GAAD,OAAYA,EAAOxE,EAAM0E,WAAWK,YAApC,GAAkD,IACtEN,GAAS,IAAAJ,YAAU,SAACG,GAAD,OAAYA,EAAOxE,EAAM0E,WAAWC,WAApC,GAAiD,IACpEK,GAAQ,IAAAX,YAAU,SAACG,GAAD,OAAYA,EAAOxE,EAAM0E,WAAWO,UAApC,GAAgD,IAClEC,GAAW,IAAAb,YAAU,SAACG,GAAD,OAAYA,EAAOxE,EAAM0E,WAAWS,aAApC,GAAmD,IAExEa,IADe,IAAA3B,YAAU,SAACG,GAAD,OAAYA,EAAOxE,EAAM0E,WAAWqB,iBAApC,GAAuD,KACpE,IAAA1B,YAAU,SAACG,GAAD,OAAYA,EAAOxE,EAAM0E,WAAWuB,cAApC,GAAoD,KAE5EyI,EAAc1J,EAalB,MAZqB,iBAAjB,IAAOA,EAAP,cAAOA,MACP0J,EAAc1J,EAAM2J,KAAK,MAYzB,2BAAKnO,UAAW,wBACZ,oBAAC,EAAA+D,kBAAD,CACIwD,QAAS,aACTgG,SAAU/N,EAAM+N,SAChB7F,eAAgBlI,EAAMmP,UACtBhG,qBAAsBnJ,EAAMmJ,qBAC5B2C,sBAAuB9L,EAAM8L,sBAC7BhH,QAASA,EACTc,mBAAmB,EACnBnB,OAAQA,EACRuB,UAAWA,EACXpB,KAAMA,EACNI,MAAOA,EACPE,SAAUA,EACVE,aAAcpF,EAAMoF,aACpBmC,aAvCS,SAACD,EAAWtG,GAAY,EAwCjCsC,SAAUtD,EAAMsD,SAChB4F,WAAYlJ,EAAMkJ,WAClB3F,YAAavD,EAAMuD,YACnBmB,UAAW1E,EAAM0E,UACjByF,QAASnK,EAAMmK,QACf/B,cA9BU,WAClBqE,OAAO,wBAAwBwC,KAAK,YAAY,EACnD,EA6BWhH,sBAAuBjI,EAAMiI,sBAC7BI,gBA5BY,WACpBoE,OAAO,wBAAwBwC,KAAK,YAAY,EACnD,IA6BO,6BAAO1D,KAAK,SAAS1K,KAAM,wBAAyBG,MAAO8D,EAAU,EAAI,IACzE,6BAAOyG,KAAK,SAAS1K,KAAM,uBAAwBG,MAAOyD,GAAkB,KAC5E,6BAAO8G,KAAK,SAAS1K,KAAM,2BAA4BG,MAAOgF,GAAwB,KACtF,6BAAOuF,KAAK,SAAS1K,KAAM,qBAAsBG,MAAO4D,GAAc,KACtE,6BAAO2G,KAAK,SAAS1K,KAAM,sBAAuBG,MAAO0N,GAA4B,KACrF,6BAAOnD,KAAK,SAAS1K,KAAM,yBAA0BG,MAAOkE,GAAsB,KAClF,6BAAOqG,KAAK,SAAS1K,KAAM,qBAAsBG,MAAM,eACvD,6BAAOuK,KAAK,SAAS1K,KAAM,uBAAwBG,MAAOhB,EAAMqP,QAG3E,C,wQCjED,UAEa7D,EAAuBA,EAAAA,qBAAA,SAAC,GAAD,IAAGvL,EAAH,EAAGA,SAAH,OAChC,oBAAC,EAAAkN,KAAD,CAAMtM,KAAK,wBACNZ,EAF2B,EAUpCuL,EAAqBC,KAJY,SAACzL,GAAD,OAC7B,oBAAC,EAAAyL,KAAD,GAAM5K,KAAK,wBAA2Bb,GADT,E,UAMlBwL,C,wFCXf,cAE4BsE,EAAAA,aAAA,SAAU9P,GASlC,OARMA,EAAMa,OACRb,EAAMa,KAAO,YAGXb,EAAM+P,WACR/P,EAAM+P,UAAW,GAIjB,oBAAC,EAAApP,SAAD,KACI,6BAAO4K,KAAK,SAAS1K,KAAMb,EAAMa,KAAMC,GAAId,EAAMa,KAAMG,MAAOhB,EAAMqP,QAEnErP,EAAM+P,UACH,6BAAOxE,KAAK,SAAS1K,KAAK,mBAAmBG,MAAOhB,EAAM+P,WAIzE,C,qfCnBD,UAQA,UACA,UACA,UACA,U,KACA,U,2BAEQnM,EAAaF,GAAGC,WAAhBC,SAE6BoM,EAAAA,sBAAA,SAAUhQ,GAC3C,IAAMiQ,EAAyBjQ,EAAMkQ,eAAelQ,EAAM+N,UADR,GAGF,IAAA3N,UAASJ,EAAMmQ,SAASjL,UAHtB,SAG3CkL,EAH2C,KAGzBC,EAHyB,QAIZ,IAAAjQ,UAAS,IAJG,SAI3CkQ,EAJ2C,KAI9BC,EAJ8B,QAKM,IAAAnQ,WAAS,GALf,SAK3CoQ,EAL2C,KAKrBC,EALqB,QAMR,IAAArQ,UAAS,IAND,SAM3CkI,EAN2C,KAM5BoI,EAN4B,QAOE,IAAAtQ,UAASJ,EAAMmQ,SAASQ,aAP1B,SAO3CC,EAP2C,KAOvBC,EAPuB,QAQlB,IAAAzQ,UAASJ,EAAMmQ,SAASW,QARN,SAQ3CC,EAR2C,KAQjCC,EARiC,QASV,IAAA5Q,UAASJ,EAAMmQ,SAASc,qBATd,SAS3CC,EAT2C,KAS7BC,EAT6B,QAUA,IAAA/Q,UAASJ,EAAMmQ,SAASiB,mBAVxB,SAU3CA,EAV2C,KAUxBC,EAVwB,QAWR,IAAAjR,UAASJ,EAAMmQ,SAASmB,aAXhB,SAW3CC,EAX2C,KAW5BC,EAX4B,QAYV,IAAApR,WAAS,GAZC,SAY3C0F,EAZ2C,KAY7BgB,EAZ6B,QAaJ,IAAA1G,UAAS,IAbL,SAa3C8F,EAb2C,KAa1BC,EAb0B,SAcR,IAAA/F,UAAS,IAdD,WAc3CqR,GAd2C,MAc5BC,GAd4B,UAeJ,IAAAtR,UAAS6P,GAfL,WAe3C0B,GAf2C,MAe1BC,GAf0B,UAgBhB,IAAAxR,UAASJ,EAAMmQ,SAASnK,WAhBR,WAgB3CA,GAhB2C,MAgBhCe,GAhBgC,UAiBM,IAAA3G,WAAS,GAjBf,WAiB3CyR,GAjB2C,MAiBrBC,GAjBqB,MAmB5C3Q,GAAS+P,GAA8BlR,EAAMmQ,SAAS4B,0BAEtDC,GAAyB,CAC3B,WACA,eACA,kBACA,wBA+BJ,IAAA/P,YAAU,WAGF,IAAIgQ,EAD4B,IAAhCjS,EAAMkS,eAAe3J,SAGrB0J,EAAoBN,GAAgBvI,QAAO,SAACC,GACxC,OAAuD,IAAhD2I,GAAuB1I,QAAQD,EAAKrI,MAC9C,IAED4Q,GAAmBK,GAE1B,GAAE,KAEH,IAAAhQ,YAAU,WACDmO,GAAqBpQ,EAAMkS,iBAIhCzB,GAAwB,IACxB,IAAAnO,UAAS,CACLC,MAAM,IAAAC,cAAA,gCAA6C4N,KACpDzN,MAAK,SAACC,GACL,IAAIgJ,EAAU,GAEVuG,EAAuB,KACvBC,OAAAA,EAEJxP,EAAOoC,MAAM2C,SAAQ,SAAAV,GACjBmL,EAAS,CAAEpR,MAAOiG,EAAKnG,GAAIF,MAAOqG,EAAKpG,MACvC+K,EAAQ/B,KAAKuI,GAEThC,IAAqBpQ,EAAMmQ,SAASjL,UAAYlF,EAAMmQ,SAASnL,MAAMuF,SAAStD,EAAKnG,MACtD,OAAzBqR,IACAA,EAAuB,IAG3BA,EAAqBtI,KAAKuI,EAAOxR,OAExC,IAED2P,EAAe3E,GACf8E,EAAiByB,GACjB1B,GAAwB,EAC3B,IAEDzQ,EAAMkS,eAAevK,SAAQ,SAACzC,GACtBA,EAASlE,QAAUoP,GACnBsB,GAAiBxM,EAAStE,MAEjC,IACJ,GAAE,CAACwP,KAEJ,IAAAnO,YAAU,WACN,GAAKwP,GAAL,CAKA,IAAIQ,EAAoB,GAExBhC,EAAuBtI,SAAQ,SAAC0K,GAC5B,IAAIzR,EAAQyR,EAAWzR,OAEmC,IAAtDoR,GAAuB1I,QAAQ+I,EAAWrR,SAC1CJ,EAAQA,EAAM8J,QAAQ,KAAM+G,GAAca,gBAG9CL,EAAkBpI,KAAK,CACnB7I,MAAOqR,EAAWrR,MAClBJ,MAAOA,GAEd,IAEDgR,GAAmBK,EAlBlB,CAmBJ,GAAE,CAACR,MAEJ,IAAAxP,YAAU,WACF6D,GAAgB9F,EAAMoI,eACtBpI,EAAMoI,cAAcpI,EAAM+N,WAGzBjI,GAAgB9F,EAAMqI,iBACvBrI,EAAMqI,gBAAgBrI,EAAM+N,SAEnC,GAAE,CAACjI,KAEJ,IAAA7D,YAAU,WACF4P,IAAwB7R,EAAMuS,qBAC9BvS,EAAMuS,oBAAoBvS,EAAM+N,WAG/B8D,IAAwB7R,EAAMwS,sBAC/BxS,EAAMwS,qBAAqBxS,EAAM+N,SAExC,GAAE,CAAC8D,KAEJ,IAAMY,GAAoBnC,EAAY7H,KAAI,SAACxB,GAAD,OAAUA,EAAKrG,KAAf,IAEtC8R,GAAe,CACf,oBAAC,EAAAC,WAAD,CAAY/R,MAAOZ,EAAM4S,KAAKC,YAAa5I,IAAK,6BAA+BjK,EAAM+N,UACjF,oBAAC,EAAA7N,gBAAD,CACIW,KAAM,6BAA+Bb,EAAM+N,SAC3C1N,QAAS0Q,IAAY,EACrBnQ,MAAOZ,EAAM4S,KAAKE,iBAClB/R,SAxHW,SAACC,GACpBgQ,EAAYhQ,EACf,MA2HG+P,IACA2B,GAAa7I,KACT,oBAAC,EAAA8I,WAAD,CAAY/R,MAAOZ,EAAM4S,KAAKG,gBAAiB9I,IAAK,6BAA+BjK,EAAM+N,UACrF,oBAAC,EAAA7N,gBAAD,CACIW,KAAM,6BAA+Bb,EAAM+N,SAC3C1N,QAASkR,IAAiB,EAC1B3Q,MAAOZ,EAAM4S,KAAKI,qBAClBjS,SAxHY,SAACC,GACzBwQ,EAAiBxQ,EACpB,MA2HG0R,GAAa7I,KACT,oBAAC,EAAA8I,WAAD,CAAY/R,MAAOZ,EAAM4S,KAAKK,cAAehJ,IAAK,2BAA6BjK,EAAM+N,UACjF,oBAAC,EAAAlK,cAAD,CACIhD,KAAM,2BAA6Bb,EAAM+N,SACzCnC,QAAS5L,EAAMkS,eACfgB,SAAU9C,EACV+C,mBAAoBnT,EAAM4S,KAAKQ,aAC/BjT,YAAaH,EAAM4S,KAAKS,yBACxB3Q,KAAM1C,EAAM+N,SACZhN,SA9JS,SAAUC,GAC/BqP,EAAoBrP,EACvB,MAkKG0R,GAAa7I,KACT,oBAAC,EAAA8I,WAAD,CAAY/R,MAAOZ,EAAM4S,KAAKU,iBAAkBrJ,IAAK,6BAA+BjK,EAAM+N,UACtF,oBAAC,EAAAlK,cAAD,CACIhD,KAAM,6BAA+Bb,EAAM+N,SAC3CvN,UAAW,iBACXoL,QAAS+F,GACTxR,YAAaH,EAAM4S,KAAKW,4BACxBL,SAAUtC,EACV7P,SApKY,SAACC,GACzB6P,EAAsB7P,EACzB,IAqKmC,kBAAvB4P,GACG,oBAAC,EAAA/M,cAAD,CACIhD,KAAM,4BAA8Bb,EAAM+N,SAC1CnC,QAAS5L,EAAMwT,aACfN,SAAUlN,GACVjF,SAAUgG,KAIhB/G,EAAMkS,eAAe3J,OAAS,GAAM,CAAC,WAAY,eAAgB,mBAAmBe,QAAQsH,IAAuB,GACjH,oBAAC,EAAA6C,cAAD,CACI7S,MAAOZ,EAAM4S,KAAKc,UAClB7S,KAAM,wBAA0Bb,EAAM+N,SACtCnC,QAAS6G,GACTzR,MAAOsH,EACPqL,UAAWnD,EACXzP,SA3LE,SAACC,GACnB0P,EAAiB1P,EACpB,EA0LmBb,YAAaH,EAAM4S,KAAKgB,qBACxBtH,eAAgB,IAChBuH,eAAe,EACfC,sBAAsB,MAMtCpB,GAAa7I,KACT,oBAAC,EAAA8I,WAAD,CAAY/R,MAAOZ,EAAM4S,KAAKmB,2BAA4B9J,IAAK,uBAAyBjK,EAAM+N,UAC1F,oBAAC,EAAAiG,YAAD,CACInT,KAAM,uBAAyBb,EAAM+N,SACrC/M,MAAOkQ,EACPnF,QAAS8F,GACTzF,YAAapM,EAAMmQ,SAAS4B,0BAC5B5R,YAAaH,EAAM4S,KAAKqB,sCACxB1T,sBAAsB,EACtBQ,SAlMa,SAACC,GAC1BmQ,EAAgBnQ,EACnB,IAmMW,oBAAC,UAAD,CACIG,OAAQA,GACRP,MAAOZ,EAAM4S,KAAKsB,YAClB9S,iBAAkBpB,EAAM4S,KAAKuB,mBAC7B9S,mBAAoBrB,EAAM4S,KAAKwB,oBAC/B9S,2BAA4B6E,EAC5B5E,gCAAiCuQ,GACjCtQ,wBAAyBsF,MAKrC4L,GAAa7I,KACT,oBAAC,EAAA8I,WAAD,CAAY/R,MAAOZ,EAAM4S,KAAKyB,iBAAkBpK,IAAK,oCAAsCjK,EAAM+N,UAC7F,oBAAC,EAAAiG,YAAD,CACInT,KAAM,oCAAsCb,EAAM+N,SAClDvN,UAAU,aACVQ,MAAOoQ,EACPjR,YAAaH,EAAM4S,KAAK0B,4BACxBvT,SApNkB,SAACC,GAC/BqQ,EAAqBrQ,EACxB,OAwND0R,IAAe,IAAA6B,cAAa,mCAAoC7B,GAAc1S,EAAO+Q,EAAU3Q,EAAAA,UAE/F,IAAMoU,GAAqBxU,EAAMyU,UAAY,uBAAyB,8BAEtE,OACI,2BAAKjU,UAAWgU,IACZ,oBAAC,EAAAE,cAAD,CAAeC,aAAcjC,MAE1B5M,GACC,oBAAClC,EAAD,KACI,2BAAKpD,UAAU,+DACX,kCAASR,EAAM4S,KAAK3P,MAApB,KADJ,IAC0CiD,IAM7D,C,qfC3SD,UACA,UAEuC0O,EAAAA,wBAAA,SAAU5U,GAAO,OAChB,IAAAI,UAASwI,OAAOC,KAAK7I,EAAMmQ,UAAU,IADrB,SAC7C0E,EAD6C,KACjCC,EADiC,KAGhDC,EAAS,GAHuC,uBAKpD,YAA2CnM,OAAOwF,QAAQpO,EAAMmQ,UAAhE,+CAA2E,wBAA/DpC,EAA+D,KAArDiH,EAAqD,KACvED,EAAOlL,KACH,oBAAC,EAAAmG,sBAAD,CACIiF,OAAQD,EAAiBpU,MACzBgS,KAAM5S,EAAM4S,KACZ7E,SAAUA,EACVoC,SAAU6E,EACV9E,eAAgBlQ,EAAMkQ,eACtBgC,eAAgBlS,EAAMkS,eAAenE,GACrCyF,aAAcxT,EAAMwT,aAAazF,GACjC9D,IAAQ8D,EAAR,SACA3F,cAAepI,EAAMoI,cACrBC,gBAAiBrI,EAAMqI,gBACvBkK,oBAAqBvS,EAAMuS,oBAC3BC,qBAAsBxS,EAAMwS,qBAC5BiC,UAAWI,IAAe9G,IAGrC,CAvBmD,8EAyBpD,IAAMmH,EAAc,SAACC,GACjBA,EAAMC,iBACNN,EAAcK,EAAMzL,OAAO2L,KAAK3K,QAAQ,IAAK,IAAIA,QAAQ,SAAU,IACtE,EAEG4K,EAAO,GACPpC,GAAW,EA/BqC,uBAiCpD,YAA2CtK,OAAOwF,QAAQpO,EAAMmQ,UAAhE,+CAA2E,wBAA/DpC,EAA+D,KAArDiH,EAAqD,KACvE9B,EAAW2B,IAAe9G,EAC1BuH,EAAKzL,KACD,yBAAGJ,KAAA,IAAUsE,EAAV,SACCvN,UAAW,YAAc0S,EAAW,iBAAiB,IACrDjJ,IAAQ8D,EAAR,OACAwH,QAASL,GAERF,EAAiBpU,OAG7B,CA5CmD,8EA8CpD,OACI,+BACI,2BAAKJ,UAAU,mBACV8U,GAEJP,EAGZ,C,yFC1DD,cACA,UAE6BlR,EAAAA,cAAA,SAAU7D,GAKnC,OACI,oBAAC,EAAAW,SAAD,KAC8B,IAAzBX,EAAM4L,QAAQrD,QACX,+BAAMvI,EAAMmT,oBAGfnT,EAAM4L,QAAQrD,OAAS,GACpB,oBAAC,gBAAD,CACI3H,MAAOZ,EAAMY,MACbC,KAAMb,EAAMa,KACZC,GAAId,EAAMa,KACVL,UAAWR,EAAMQ,UACjBQ,MAAOhB,EAAMkT,SACbnS,SAjBC,SAACC,GACdhB,EAAMe,SAASC,EAClB,EAgBe,YAAWhB,EAAM0C,KACjBkJ,QAAS5L,EAAM4L,UAItB5L,EAAMC,SAEP,yBAAGO,UAAU,eAAeR,EAAMG,aAG7C,C,sFChCD,QAE0BwS,EAAAA,WAAA,SAAU3S,GAChC,OACI,0BAAIwV,OAAO,OACP,0BAAItI,MAAM,OACN,6BAAOuI,QAAQ,IAAIzV,EAAMY,QAE7B,8BACKZ,EAAMC,UAItB,C,gECZ+ByV,EAAAA,iBAAA,SAAU1V,GACtC,OACI,gCAAUQ,UAAWR,EAAMQ,WACnB,kCAASR,EAAMiV,QACdjV,EAAMC,SAGtB,C,gECP2B0V,EAAAA,aAAA,SAAU3V,GAClC,OACI,4BAAMyC,OAAO,QACRzC,EAAMC,SAGlB,C,2FCPD,cAE+B2V,EAAAA,gBAAA,SAAU5V,GACrC,OACI,oBAAC,EAAAW,SAAD,KACI,8BAAKX,EAAM0N,OACX,6BAAI1N,EAAMG,aACTH,EAAMC,SAGlB,C,gECT4ByU,EAAAA,cAAA,SAAU1U,GACnC,OACI,6BAAOQ,UAAU,cACb,iCACKR,EAAM2U,cAItB,C,+DCTsB5Q,EAAAA,QAAA,SAAU/D,GAC7B,OACI,4BAAMQ,UAAU,+BAA8B,gCAAW,gCAAW,gCAAW,gCAEtF,C,gECH2BqV,EAAAA,aAAA,SAAU7V,GAClC,OACI,6BACIuL,KAAK,SACL1K,KAAMb,EAAMa,KACZG,MAAOhB,EAAM4S,KACbkD,SAAU9V,EAAM8V,SAChBtV,UAAU,kBAGrB,C,uFCXD,cACA,UACA,UAE2BwT,EAAAA,YAAA,SAAUhU,GACjC,IAAIG,EAIAA,EAFAH,EAAMO,qBAEQ,yBAAGC,UAAU,cAAcC,wBAAyB,CAAEC,OAAQV,EAAMG,eAEpE,yBAAGK,UAAU,eAAeR,EAAMG,aAGpD,IAMIK,EAAYR,EAAMQ,UAAYR,EAAMQ,UAAY,GAMpD,OAJIR,EAAM+L,UACNvL,GAAa,kEAIb,oBAAC,EAAAG,SAAD,KACI,2BAAKH,UAAWA,GACZ,oBAAC,cAAD,CACI+K,KAAK,OACL3K,MAAOZ,EAAMY,MACbC,KAAMb,EAAMa,KACZC,GAAId,EAAMa,KACVL,UAAWR,EAAMQ,UACjBQ,MAAOhB,EAAMgB,MACboL,YAAapM,EAAMoM,YACnBrL,SAvBC,SAAUC,GACnBhB,EAAMe,UACNf,EAAMe,SAASC,EAEtB,IAsBYhB,EAAM+L,SAAW,oBAAC,EAAAhI,QAAD,MAEjB5D,GAIhB,C,6FCjDD,cAEiC4V,EAAAA,kBAAA,SAAU/V,GACvC,IAMMgW,EAAehW,EAAMgW,aAAehW,EAAMgW,aAAe,gBACzDC,EAAgBjW,EAAMiW,cAAgBjW,EAAMiW,cAAgB,kBAE5DC,EAAOlW,EAAMgN,WAAagJ,EAAeC,EAEzCvI,EAAQ1N,EAAMgN,WAAahN,EAAMmW,cAAgBnW,EAAMoW,eAE7D,OACI,oBAAC,EAAAC,OAAD,CACIC,SAAA,EACA5I,MAAOA,EACPwI,KAAMA,EACNX,QAlBQ,WACRvV,EAAMuV,SACNvV,EAAMuV,SAEb,EAeO/U,UAAWR,EAAMQ,WAG5B,C,oGCzBD,cACA,UACA,UAEwCqM,EAAAA,yBAAA,SAAC,GAUpC,IARGG,EAQH,EARGA,WACA7C,EAOH,EAPGA,QACA4C,EAMH,EANGA,iBACA1J,EAKH,EALGA,YACAyJ,EAIH,EAJGA,aACAxJ,EAGH,EAHGA,SACAC,EAEH,EAFGA,YAgCJ,OA7BA,IAAAtB,YAAU,WAEN,IAAMsU,EAAsB/G,SAASgH,cAAc,kCAEnD,GAAMD,EAAN,CAIA,IAAME,EAAkBF,EAAoBG,mBAE5C,GAAMD,EAAN,CAIA,IAAME,EAAcF,EAAgBD,cAAc,8BAElD,GAAMG,EAAN,CAIA,IAAMC,EAAcD,EAAYE,YAE1BD,GAINH,EAAgBK,aAAaP,EAAqBK,EARjD,CANA,CANA,CAqBJ,IAGG,oBAAC,EAAAjW,SAAD,KACI,oBAAC,EAAAoV,kBAAD,CACIvV,UAAU,gCACVwM,WAAYA,EACZgJ,aAAa,gBACbC,cAAc,WACdE,cAAehM,EAAQ4M,aACvBX,eAAgBjM,EAAQ6M,aACxBzB,QAASxI,IAEb,oBAAC,EAAA3J,eAAD,CACIC,YAAaA,EACbtC,SAAU+L,EACVrJ,wBAAwB,EACxBH,SAAUA,EACVC,YAAaA,IAI5B,C,ySC7DD,UACA,UAE6BkQ,EAAAA,cAAA,SAACzT,GAAU,M,2YAAA,EACE,IAAAI,UAAS,IADX,GAC7B6W,EAD6B,KAChBC,EADgB,MAGpC,IAAAjV,YAAU,WACFjC,EAAMgB,OACNkW,EAAelX,EAAMgB,MAAM2N,KAAK,KAEvC,GAAE,CAAC3O,EAAMgB,QAEV,IAAIb,OAAAA,EAEAH,EAAMG,cAGFA,EAFAH,EAAMO,qBAEQ,yBAAGC,UAAU,cAAcC,wBAAyB,CAACC,OAAQV,EAAMG,eAEnE,yBAAGK,UAAU,eAAeR,EAAMG,cAIxD,IAYMa,EAAQhB,EAAMgB,MAAQhB,EAAMgB,MAAQ,GAE1C,OACI,oBAAC,EAAAL,SAAD,KACI,oBAAC,EAAAmD,eAAD,CACIlD,MAAOZ,EAAMY,MACbI,MAAOA,EACPkL,YAAalM,EAAM4L,QACnB7K,SApBK,SAACC,GACVhB,EAAMe,UACNf,EAAMe,SAASC,GAGE,iBAAjB,IAAOA,EAAP,cAAOA,IACPkW,EAAelW,EAAM2N,KAAK,MAE1BuI,EAAe,GAEtB,EAWW5K,eAAgBtM,EAAMsM,eACtB9L,UAAU,iCACVmM,4BAA6B3M,EAAM6T,cACnCjH,mCAAoC5M,EAAM8T,uBAE9C,6BAAOvI,KAAK,SAAS1K,KAAMb,EAAMa,KAAMG,MAAOiW,IAE7C9W,EAGZ,C,gECrD+BgX,EAAAA,iBAAA,SAAUnX,GAAO,IACrCW,EAAa+C,GAAGO,QAAhBtD,SAEFI,EAAW,SAACyL,GACVxM,EAAMe,UACNf,EAAMe,SACFyL,EAAE9C,OAAO1I,QAAUhB,EAAMoX,WAAa3K,OAAOD,EAAE9C,QAAQ2N,GAAG,YAIrE,EAED,OACI,oBAAC1W,EAAD,KACI,6BACI4K,KAAK,QACL1K,KAAMb,EAAMa,KACZC,GAAId,EAAMa,KAAO,QACjBG,MAAOhB,EAAMoX,UACbE,eAAgBtX,EAAMkT,SACtBnS,SAAUA,IAGd,6BAAO0U,QAASzV,EAAMa,KAAO,SAAUb,EAAMuX,WAVjD,KAYI,6BACIhM,KAAK,QACL1K,KAAMb,EAAMa,KACZyW,gBAAiBtX,EAAMkT,SACvBpS,GAAId,EAAMa,KAAO,SACjBG,MAAOhB,EAAMwX,WACbzW,SAAUA,IAEd,6BACI0U,QAASzV,EAAMa,KAAO,UAAWb,EAAMyX,YAE3C,yBAAGjX,UAAU,eAAeR,EAAMG,aAG7C,C,8JC3CQJ,Y,qGACAwE,iB,gHACA6I,4B,kHACAkC,8B,8GACAO,0B,6GACAvB,yB,yGACA0B,qB,2GACA4E,uB,8FACAjC,U,oGACA+C,gB,gGACAC,Y,mGACAC,e,iGACAlB,a,gGACAmB,Y,mGACA3V,e,iGACA2D,a,+FACAmQ,W,iGACAP,a,gGACA3D,Y,oGACAqH,gB,0FACApT,O,qGACA7C,iB,kQCrBT,UACA,UACA,UAE2BwW,EAAAA,YAAA,SAAC1X,GACpBA,EAAM2X,aAAa3S,OAA6C,iBAA7BhF,EAAM2X,aAAa3S,QACtDhF,EAAM2X,aAAa3S,MAAQhF,EAAM2X,aAAa3S,MAAM4E,MAAM,KAAKnB,KAAI,SAAAxB,GAAA,OAAQ0I,SAAS1I,EAAjB,KAGvE,IAAI0Q,EAAe,CACflT,OAAQzE,EAAM2X,aAAalT,OAC3BG,KAAM5E,EAAM2X,aAAa/S,KAAO5E,EAAM2X,aAAa/S,MAAO,IAAAgT,6BAC1D9S,QAAS9E,EAAM2X,aAAa7J,WAC5B9I,MAAOhF,EAAM2X,aAAa3S,MAAQhF,EAAM2X,aAAa3S,MAAQ,GAC7DE,SAAUlF,EAAM2X,aAAazS,SAAWlF,EAAM2X,aAAazS,SAAW,KACtEc,UAAWhG,EAAM2X,aAAa3R,UAAYhG,EAAM2X,aAAa3R,UAAY,QACzEV,gBAAiB,KACjBE,cAAe,KACfJ,aAAc,KACdM,iBAAiB,EACjB6I,aAAc,YACd3I,mBAAmB,EACnBE,cAAc,EACd+R,UAAW7X,EAAM2X,aAAaE,UAAY7X,EAAM2X,aAAaE,UAAY,CAAC,GAGxE7J,GAAQ,IAAA8J,kBAAiB9X,EAAMa,KAAM,CACvCkX,QADuC,WACD,I,MAA9BC,EAA8B,uDAAtBL,EAAclT,EAAQ,aAClC,OAAQA,EAAO8G,MACX,IAAK,aACD,YACOyM,EADP,CAEIvT,OAAQA,EAAOA,SAEvB,IAAK,iBACD,YACOuT,EADP,CAEIhS,UAAWvB,EAAOuB,YAE1B,IAAK,WAiBD,MAf2B,iBAAhBvB,EAAOG,OAAqB,IAAAqT,UAASxT,EAAOG,QACnDH,EAAOG,KAAO+K,SAASlL,EAAOG,OAIP,iBAAhBH,EAAOG,OACdH,EAAOG,KAAO,IAAIoG,KAAKvG,EAAOG,MAAMsT,WAIxCzT,EAAOG,MAAO,IAAAuT,4BAA2B1T,EAAOG,MAGhDH,EAAOG,MAAO,IAAAwT,2BAA0B3T,EAAOG,MAE/C,KACOoT,EADP,CAEIpT,KAAMH,EAAOG,OAErB,IAAK,cACD,YACOoT,EADP,CAEIlT,QAASL,EAAOK,UAExB,IAAK,YACD,YACOkT,EADP,CAEIhT,MAAOP,EAAOO,QAEtB,IAAK,eACD,YACOgT,EADP,CAEI9S,SAAUT,EAAOS,WAEzB,IAAK,yBACD,YACO8S,EADP,CAEI1S,gBAAiBb,EAAOa,kBAEhC,IAAK,uBACD,YACO0S,EADP,CAEIxS,cAAef,EAAOe,gBAE9B,IAAK,oBACD,YACOwS,EADP,CAEI5S,aAAcX,EAAOW,eAE7B,IAAK,oBACD,YACO4S,EADP,CAEIzJ,aAAc9J,EAAO8J,eAE7B,IAAK,0BACD,YACOyJ,EADP,CAEIpS,kBAAmBnB,EAAOmB,oBAElC,IAAK,qBACD,YACOoS,EADP,CAEIlS,aAAcrB,EAAOqB,eAG7B,IAAK,iBACD,YACOkS,EADP,CAEIH,UAAAA,EAAAA,CAAAA,EACOpT,EAAOoT,aAItB,IAAK,yBACD,IAAMA,EAAY,EAAZA,CAAAA,EACCG,EAAMH,W,EADP,G,EAEDpT,EAAO5D,K,EAAO4D,EAAOzD,M,iGAG1B,YACOgX,EADP,CAEIH,UAAAA,EAAAA,CAAAA,EAAeA,KAI3B,OAAOG,CACV,EACDK,QAAS,CACLjS,UADK,SACK3B,GACN,MAAO,CACH8G,KAAM,aACN9G,OAAQA,EAEf,EACDsC,aAPK,SAOQf,GACT,MAAO,CACHuF,KAAM,iBACNvF,UAAWA,EAElB,EACDK,QAbK,SAaGzB,GACJ,MAAO,CACH2G,KAAM,WACN3G,KAAMA,EAEb,EACD0B,WAnBK,SAmBMxB,GACP,MAAO,CACHyG,KAAM,cACNzG,QAASA,EAEhB,EACDyB,SAzBK,SAyBIvB,GACL,MAAO,CACHuG,KAAM,YACNvG,MAAOA,EAEd,EACDwB,YA/BK,SA+BOtB,GACR,MAAO,CACHqG,KAAM,eACNrG,SAAUA,EAEjB,EACDuB,mBArCK,SAqCcnB,GACf,MAAO,CACHiG,KAAM,yBACNjG,gBAAiBA,EAExB,EACDoB,iBA3CK,SA2CYlB,GACb,MAAO,CACH+F,KAAM,uBACN/F,cAAeA,EAEtB,EACDmB,gBAjDK,SAiDWvB,GACZ,MAAO,CACHmG,KAAM,oBACNnG,aAAcA,EAErB,EACDwB,mBAvDK,SAuDclB,GACf,MAAO,CACH6F,KAAM,wBACN7F,gBAAiBA,EAExB,EACD+I,gBA7DK,SA6DWF,GACZ,MAAO,CACHhD,KAAM,oBACNgD,aAAcA,EAErB,EACD1H,qBAnEK,SAmEgBjB,GACjB,MAAO,CACH2F,KAAM,0BACN3F,kBAAmBA,EAE1B,EACDkB,gBAzEK,SAyEWhB,GACZ,MAAO,CACHyF,KAAM,qBACNzF,aAAcA,EAErB,EACDwS,aA/EK,SA+EQT,GACT,MAAO,CACHtM,KAAM,iBACNsM,UAAWA,EAElB,EACDU,mBArFK,SAqFc1X,EAAMG,GACrB,MAAO,CACHuK,KAAM,yBACN1K,KAAMA,EACNG,MAAOA,EAEd,GAELwX,UAAW,CACP7T,UADO,SACGqT,GACN,OAAOA,EAAMvT,MAChB,EACDwB,aAJO,SAIM+R,GACT,OAAOA,EAAMhS,SAChB,EACDnB,QAPO,SAOCmT,GACJ,OAAOA,EAAMpT,IAChB,EACDG,WAVO,SAUIiT,GACP,OAAOA,EAAMlT,OAChB,EACDG,SAbO,SAaE+S,GACL,OAAOA,EAAMhT,KAChB,EACDG,YAhBO,SAgBK6S,GACR,OAAOA,EAAM9S,QAChB,EACDK,mBAnBO,SAmBYyS,GACf,OAAOA,EAAM1S,eAChB,EACDG,iBAtBO,SAsBUuS,GACb,OAAOA,EAAMxS,aAChB,EACDH,gBAzBO,SAyBS2S,GACZ,OAAOA,EAAM5S,YAChB,EACDO,mBA5BO,SA4BYqS,GACf,OAAOA,EAAMtS,eAChB,EACD8I,gBA/BO,SA+BSwJ,GACZ,OAAOA,EAAMzJ,YAChB,EACD1I,qBAlCO,SAkCcmS,GACjB,OAAOA,EAAMpS,iBAChB,EACDG,gBArCO,SAqCSiS,GACZ,OAAOA,EAAMlS,YAChB,EACDoI,aAxCO,SAwCM8J,GACT,OAAOA,EAAMH,SAChB,EACDY,mBA3CO,SA2CYT,EAAOnX,GACtB,OAAOmX,EAAMH,UAAUhX,IAAS,IACnC,KAMT,OAFA,IAAA6X,UAAS1K,GAEFA,CACV,C,gECjRM,IAAM2K,EAA0BA,EAAAA,wBAAA,WACnC,OAAOR,GAA2B,IAAInN,MAAOkN,UAChD,EAMYE,GAJ4BR,EAAAA,0BAAA,WACrC,OAAOQ,EAA0BO,IACpC,EAEwCP,EAAAA,0BAAA,SAACQ,GACtC,IAAMhU,EAAO,IAAIoG,KACbmN,EAA2BS,IAU/B,OAPahU,EAAKiU,cAOlB,KANe,KAAOjU,EAAKkU,WAAa,IAAIC,OAAO,GAMnD,KALa,IAAMnU,EAAKC,WAAWkU,OAAO,GAK1C,KAJe,IAAMnU,EAAKoU,YAAYD,OAAO,GAI7C,KAHiB,IAAMnU,EAAKqU,cAAcF,OAAO,GAGjD,KAFiB,IAAMnU,EAAKsU,cAAcH,OAAO,EAGpD,GAQYI,GAN4BC,EAAAA,0BAAA,SAACC,GACtC,IAAMzU,EAAO,IAAIoG,KAAKqO,GAEtB,OAAOlB,EAA2BvT,EAAKsT,UAC1C,EAE8BiB,EAAAA,gBAAA,SAACE,GAC5B,OAAO1J,SAAS0J,GAAMC,WAAW/Q,QAAU,EAC9C,GAEY4P,EAA6BA,EAAAA,2BAAA,SAACkB,GAGvC,OAFAA,EAAO1J,SAAS0J,GAETF,IAAoBE,EAAOA,EAAO,GAC5C,EAE8C7V,EAAAA,gCAAA,SAAC6V,GAG5C,OAFAA,EAAO1J,SAAS0J,GAETF,IAA2B,IAAPE,EAAcA,CAC5C,C,gRCbYE,GA9BU/Q,EAAAA,QAAA,SAACgR,GACpB,OAAKA,GAICC,MAAMC,QAAQF,IAA2B,iBAAjB,IAAOA,EAAP,cAAOA,MACjCA,EAAQ5Q,OAAO+Q,OAAOH,IAGnBA,EAAMpQ,QAAO,SAACC,GACjB,OAAOA,SAAgD,KAATA,CACjD,KATU,EAUd,EAE8BuQ,EAAAA,gBAAA,SAACC,GAC5B,OAAO,SAAC1Z,GAA4B,2BAAZ2C,EAAY,6BAAZA,EAAY,kBACM,MAAlCgX,SAAWD,EAAOE,iBAClB,EAAAD,SAAQE,MAAR,SAAc,WAAY7Z,GAA1B,OAA0C2C,GAEjD,CACJ,EAEiCmX,EAAAA,mBAAA,WAC9B,OAAOzK,SAAS0K,KAAKC,UAAUC,SAAS,oBAC3C,EAE+BhL,EAAAA,iBAAA,SAACvO,GAC7B,OAAO2O,SAASC,kBAAkB5O,GAAM,EAC3C,EAE6B0Y,EAAAA,eAAA,SAAC1Y,EAAMwZ,GACjC,OAAO7K,SAASgH,cAAT,qBAA4C6D,EAA5C,+CAAiGxZ,EAAjG,IAAyGwZ,EACnH,GAEkCC,EAAAA,oBAAA,SAACzZ,EAAMwZ,GACtC,IAAME,EAAQhB,EAAe1Y,EAAMwZ,GAEnC,OAAKE,EAIEA,EAAMvZ,MAHF,IAId,EAE8CwZ,EAAAA,gCAAA,SAAC3Z,EAAMwZ,GAClD,IAAME,EAAQhB,EAAe1Y,EAAMwZ,GAEnC,OAAKE,GAAUA,EAAMvZ,OAIM,iBAAhBuZ,EAAMvZ,QACbuZ,EAAMvZ,MAAQuZ,EAAMvZ,MAAMsY,YAGvBiB,EAAMvZ,MAAM4I,MAAM,KAAKnB,KAAI,SAAAxB,GAAA,OAAQ0I,SAAS1I,EAAjB,KAPvB,EAQd,EAEwCwT,EAAAA,0BAAA,SAAC5Z,EAAMwZ,GAC5C,IAAME,EAAQhB,EAAe1Y,EAAMwZ,GAEnC,QAAKE,IAIkB,MAAhBA,EAAMvZ,OAAiC,SAAhBuZ,EAAMvZ,MACvC,EAE8C0Z,EAAAA,gCAAA,SAACL,GAC5C,IAAMM,EAAanL,SAASgH,cAAT,uBAA8C6D,GAEjE,OAAKM,EAIE,CACH7V,QAA8C,MAArC6V,EAAWC,QAAQC,cAC5BpW,OAAQkW,EAAWC,QAAQE,WAC3BlW,KAAM+V,EAAWC,QAAQG,WACzBC,SAAUL,EAAWC,QAAQK,eAC7B/V,SAAUyV,EAAWC,QAAQM,eAC7BlW,MAAO2V,EAAWC,QAAQO,YAC1BnV,UAAW2U,EAAWC,QAAQQ,iBAVvB,CAAC,CAYf,EAQuBnD,EAAAA,SAAA,SAACjX,GACrB,OAAQqa,MAAMra,EACjB,C,mEC3FGsa,E,MAA0B,GAA4B,KAE1DA,EAAwBzR,KAAK,CAAC0R,EAAOza,GAAI,yvBA+BtC,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,+DAA+D,MAAQ,GAAG,SAAW,mQAAmQ,eAAiB,CAAC,0vBAA0vB,WAAa,MAE/oC,S,WChCAya,EAAOC,QAAU,SAAUC,GACzB,IAAIC,EAAO,GA4EX,OAzEAA,EAAKpC,SAAW,WACd,OAAOqC,KAAKlT,KAAI,SAAUY,GACxB,IAAIuS,EAAU,GACVC,OAA+B,IAAZxS,EAAK,GAoB5B,OAnBIA,EAAK,KACPuS,GAAW,cAAcE,OAAOzS,EAAK,GAAI,QAEvCA,EAAK,KACPuS,GAAW,UAAUE,OAAOzS,EAAK,GAAI,OAEnCwS,IACFD,GAAW,SAASE,OAAOzS,EAAK,GAAGd,OAAS,EAAI,IAAIuT,OAAOzS,EAAK,IAAM,GAAI,OAE5EuS,GAAWH,EAAuBpS,GAC9BwS,IACFD,GAAW,KAETvS,EAAK,KACPuS,GAAW,KAETvS,EAAK,KACPuS,GAAW,KAENA,CACT,IAAGjN,KAAK,GACV,EAGA+M,EAAKK,EAAI,SAAWC,EAASC,EAAOC,EAAQC,EAAUC,GAC7B,iBAAZJ,IACTA,EAAU,CAAC,CAAC,KAAMA,OAASK,KAE7B,IAAIC,EAAyB,CAAC,EAC9B,GAAIJ,EACF,IAAK,IAAIK,EAAI,EAAGA,EAAIZ,KAAKpT,OAAQgU,IAAK,CACpC,IAAIzb,EAAK6a,KAAKY,GAAG,GACP,MAANzb,IACFwb,EAAuBxb,IAAM,EAEjC,CAEF,IAAK,IAAI0b,EAAK,EAAGA,EAAKR,EAAQzT,OAAQiU,IAAM,CAC1C,IAAInT,EAAO,GAAGyS,OAAOE,EAAQQ,IACzBN,GAAUI,EAAuBjT,EAAK,WAGrB,IAAV+S,SACc,IAAZ/S,EAAK,KAGdA,EAAK,GAAK,SAASyS,OAAOzS,EAAK,GAAGd,OAAS,EAAI,IAAIuT,OAAOzS,EAAK,IAAM,GAAI,MAAMyS,OAAOzS,EAAK,GAAI,MAF/FA,EAAK,GAAK+S,GAMVH,IACG5S,EAAK,IAGRA,EAAK,GAAK,UAAUyS,OAAOzS,EAAK,GAAI,MAAMyS,OAAOzS,EAAK,GAAI,KAC1DA,EAAK,GAAK4S,GAHV5S,EAAK,GAAK4S,GAMVE,IACG9S,EAAK,IAGRA,EAAK,GAAK,cAAcyS,OAAOzS,EAAK,GAAI,OAAOyS,OAAOzS,EAAK,GAAI,KAC/DA,EAAK,GAAK8S,GAHV9S,EAAK,GAAK,GAAGyS,OAAOK,IAMxBT,EAAK7R,KAAKR,GACZ,CACF,EACOqS,CACT,C,WClFAH,EAAOC,QAAU,SAAUnS,GACzB,IAAIuS,EAAUvS,EAAK,GACfoT,EAAapT,EAAK,GACtB,IAAKoT,EACH,OAAOb,EAET,GAAoB,mBAATc,KAAqB,CAC9B,IAAIC,EAASD,KAAKE,SAASC,mBAAmBC,KAAKC,UAAUN,MACzD/Z,EAAO,+DAA+DoZ,OAAOa,GAC7EK,EAAgB,OAAOlB,OAAOpZ,EAAM,OACxC,MAAO,CAACkZ,GAASE,OAAO,CAACkB,IAAgBrO,KAAK,KAChD,CACA,MAAO,CAACiN,GAASjN,KAAK,KACxB,C,iBCbA,IAAIsO,EAAI,EAAQ,MAEdzB,EAAQ0B,WAAaD,EAAEC,WACvB1B,EAAQ2B,YAAcF,EAAEE,W,8KCMtBvR,EAAU,CAAC,EAEfA,EAAQwR,kBAAoB,IAC5BxR,EAAQyR,cAAgB,IACxBzR,EAAQ0R,OAAS,SAAc,KAAM,QACrC1R,EAAQ2R,OAAS,IACjB3R,EAAQ4R,mBAAqB,IAEhB,IAAI,IAAS5R,GAKnB,QAAe,KAAW,IAAQ6R,OAAS,IAAQA,YAASpB,C,WCtBnE,IAAIqB,EAAc,GAClB,SAASC,EAAqBC,GAE5B,IADA,IAAIhb,GAAU,EACLmZ,EAAI,EAAGA,EAAI2B,EAAYnV,OAAQwT,IACtC,GAAI2B,EAAY3B,GAAG6B,aAAeA,EAAY,CAC5Chb,EAASmZ,EACT,KACF,CAEF,OAAOnZ,CACT,CACA,SAASib,EAAanC,EAAM9P,GAG1B,IAFA,IAAIkS,EAAa,CAAC,EACdC,EAAc,GACThC,EAAI,EAAGA,EAAIL,EAAKnT,OAAQwT,IAAK,CACpC,IAAI1S,EAAOqS,EAAKK,GACZjb,EAAK8K,EAAQoS,KAAO3U,EAAK,GAAKuC,EAAQoS,KAAO3U,EAAK,GAClDnC,EAAQ4W,EAAWhd,IAAO,EAC1B8c,EAAa,GAAG9B,OAAOhb,EAAI,KAAKgb,OAAO5U,GAC3C4W,EAAWhd,GAAMoG,EAAQ,EACzB,IAAI+W,EAAoBN,EAAqBC,GACzCM,EAAM,CACRC,IAAK9U,EAAK,GACV4S,MAAO5S,EAAK,GACZ+U,UAAW/U,EAAK,GAChB8S,SAAU9S,EAAK,GACf+S,MAAO/S,EAAK,IAEd,IAA2B,IAAvB4U,EACFP,EAAYO,GAAmBI,aAC/BX,EAAYO,GAAmBK,QAAQJ,OAClC,CACL,IAAII,EAAUC,EAAgBL,EAAKtS,GACnCA,EAAQ4S,QAAUzC,EAClB2B,EAAYe,OAAO1C,EAAG,EAAG,CACvB6B,WAAYA,EACZU,QAASA,EACTD,WAAY,GAEhB,CACAN,EAAYlU,KAAK+T,EACnB,CACA,OAAOG,CACT,CACA,SAASQ,EAAgBL,EAAKtS,GAC5B,IAAI8S,EAAM9S,EAAQ2R,OAAO3R,GAYzB,OAXA8S,EAAIC,OAAOT,GACG,SAAiBU,GAC7B,GAAIA,EAAQ,CACV,GAAIA,EAAOT,MAAQD,EAAIC,KAAOS,EAAO3C,QAAUiC,EAAIjC,OAAS2C,EAAOR,YAAcF,EAAIE,WAAaQ,EAAOzC,WAAa+B,EAAI/B,UAAYyC,EAAOxC,QAAU8B,EAAI9B,MACzJ,OAEFsC,EAAIC,OAAOT,EAAMU,EACnB,MACEF,EAAIG,QAER,CAEF,CACAtD,EAAOC,QAAU,SAAUE,EAAM9P,GAG/B,IAAIkT,EAAkBjB,EADtBnC,EAAOA,GAAQ,GADf9P,EAAUA,GAAW,CAAC,GAGtB,OAAO,SAAgBmT,GACrBA,EAAUA,GAAW,GACrB,IAAK,IAAIhD,EAAI,EAAGA,EAAI+C,EAAgBvW,OAAQwT,IAAK,CAC/C,IACIiD,EAAQrB,EADKmB,EAAgB/C,IAEjC2B,EAAYsB,GAAOX,YACrB,CAEA,IADA,IAAIY,EAAqBpB,EAAakB,EAASnT,GACtCsT,EAAK,EAAGA,EAAKJ,EAAgBvW,OAAQ2W,IAAM,CAClD,IACIC,EAASxB,EADKmB,EAAgBI,IAEK,IAAnCxB,EAAYyB,GAAQd,aACtBX,EAAYyB,GAAQb,UACpBZ,EAAYe,OAAOU,EAAQ,GAE/B,CACAL,EAAkBG,CACpB,CACF,C,WCjFA,IAAIG,EAAO,CAAC,EA+BZ7D,EAAOC,QAPP,SAA0B8B,EAAQ+B,GAChC,IAAI3V,EAtBN,SAAmBA,GACjB,QAA4B,IAAjB0V,EAAK1V,GAAyB,CACvC,IAAI4V,EAAc9P,SAASgH,cAAc9M,GAGzC,GAAI6V,OAAOC,mBAAqBF,aAAuBC,OAAOC,kBAC5D,IAGEF,EAAcA,EAAYG,gBAAgBC,IAC5C,CAAE,MAAOlT,GAEP8S,EAAc,IAChB,CAEFF,EAAK1V,GAAU4V,CACjB,CACA,OAAOF,EAAK1V,EACd,CAIeiW,CAAUrC,GACvB,IAAK5T,EACH,MAAM,IAAIkW,MAAM,2GAElBlW,EAAOmW,YAAYR,EACrB,C,UCvBA9D,EAAOC,QANP,SAA4B5P,GAC1B,IAAI3H,EAAUuL,SAASsQ,cAAc,SAGrC,OAFAlU,EAAQyR,cAAcpZ,EAAS2H,EAAQmU,YACvCnU,EAAQ0R,OAAOrZ,EAAS2H,EAAQA,SACzB3H,CACT,C,iBCCAsX,EAAOC,QANP,SAAwCwE,GACtC,IAAI3Q,EAAmD,KACnDA,GACF2Q,EAAaC,aAAa,QAAS5Q,EAEvC,C,WCoDAkM,EAAOC,QAjBP,SAAgB5P,GACd,GAAwB,oBAAb4D,SACT,MAAO,CACLmP,OAAQ,WAAmB,EAC3BE,OAAQ,WAAmB,GAG/B,IAAImB,EAAepU,EAAQ4R,mBAAmB5R,GAC9C,MAAO,CACL+S,OAAQ,SAAgBT,IAjD5B,SAAe8B,EAAcpU,EAASsS,GACpC,IAAIC,EAAM,GACND,EAAI/B,WACNgC,GAAO,cAAcrC,OAAOoC,EAAI/B,SAAU,QAExC+B,EAAIjC,QACNkC,GAAO,UAAUrC,OAAOoC,EAAIjC,MAAO,OAErC,IAAIJ,OAAiC,IAAdqC,EAAI9B,MACvBP,IACFsC,GAAO,SAASrC,OAAOoC,EAAI9B,MAAM7T,OAAS,EAAI,IAAIuT,OAAOoC,EAAI9B,OAAS,GAAI,OAE5E+B,GAAOD,EAAIC,IACPtC,IACFsC,GAAO,KAELD,EAAIjC,QACNkC,GAAO,KAELD,EAAI/B,WACNgC,GAAO,KAET,IAAIC,EAAYF,EAAIE,UAChBA,GAA6B,oBAAT1B,OACtByB,GAAO,uDAAuDrC,OAAOY,KAAKE,SAASC,mBAAmBC,KAAKC,UAAUqB,MAAe,QAKtIxS,EAAQwR,kBAAkBe,EAAK6B,EAAcpU,EAAQA,QACvD,CAoBMsU,CAAMF,EAAcpU,EAASsS,EAC/B,EACAW,OAAQ,YArBZ,SAA4BmB,GAE1B,GAAgC,OAA5BA,EAAaG,WACf,OAAO,EAETH,EAAaG,WAAWC,YAAYJ,EACtC,CAgBMK,CAAmBL,EACrB,EAEJ,C,WC9CAzE,EAAOC,QAVP,SAA2B2C,EAAK6B,GAC9B,GAAIA,EAAaM,WACfN,EAAaM,WAAWC,QAAUpC,MAC7B,CACL,KAAO6B,EAAaQ,YAClBR,EAAaI,YAAYJ,EAAaQ,YAExCR,EAAaH,YAAYrQ,SAASiR,eAAetC,GACnD,CACF,C,WCZA5C,EAAOC,QAAUkF,Q,WCAjBnF,EAAOC,QAAUmF,gC,WCAjBpF,EAAOC,QAAU+D,M,WCAjBhE,EAAOC,QAAU9X,E,WCAjB6X,EAAOC,QAAU9X,GAAGC,U,WCApB4X,EAAOC,QAAU9X,GAAGhB,I,WCApB6Y,EAAOC,QAAU9X,GAAGO,O,WCApBsX,EAAOC,QAAU9X,GAAGkd,K,WCApBrF,EAAOC,QAAU9X,GAAGmd,O,WCApBtF,EAAOC,QAAU9X,GAAGU,G,GCChB0c,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB3E,IAAjB4E,EACH,OAAOA,EAAazF,QAGrB,IAAID,EAASuF,EAAyBE,GAAY,CACjDlgB,GAAIkgB,EAEJxF,QAAS,CAAC,GAOX,OAHA0F,EAAoBF,GAAUzF,EAAQA,EAAOC,QAASuF,GAG/CxF,EAAOC,OACf,CCrBAuF,EAAoBI,EAAK5F,IACxB,IAAI6F,EAAS7F,GAAUA,EAAO8F,WAC7B,IAAO9F,EAAiB,QACxB,IAAM,EAEP,OADAwF,EAAoBO,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdL,EAAoBO,EAAI,CAAC9F,EAASgG,KACjC,IAAI,IAAIvX,KAAOuX,EACXT,EAAoBU,EAAED,EAAYvX,KAAS8W,EAAoBU,EAAEjG,EAASvR,IAC5ErB,OAAO8Y,eAAelG,EAASvR,EAAK,CAAE0X,YAAY,EAAMC,IAAKJ,EAAWvX,IAE1E,ECND8W,EAAoBU,EAAI,CAACvD,EAAKjP,IAAUrG,OAAOiZ,UAAUC,eAAeC,KAAK7D,EAAKjP,GCClF8R,EAAoBiB,EAAKxG,IACH,oBAAXyG,QAA0BA,OAAOC,aAC1CtZ,OAAO8Y,eAAelG,EAASyG,OAAOC,YAAa,CAAElhB,MAAO,WAE7D4H,OAAO8Y,eAAelG,EAAS,aAAc,CAAExa,OAAO,GAAO,ECL9D+f,EAAoBoB,QAAK9F,ECAzB,cACA,UACA,UACA,UACA,UACA,UAgBM3X,EAAY,8CAIZ0d,EAAkBC,EAAAA,eAAeC,QACjCC,EAAqBF,EAAAA,eAAeG,OAoB1CH,EAAAA,eAAeC,QAAU,SAAUxhB,GAE/BshB,EAAgBlC,MAAMvE,KAAM8G,YAExB,IAAAje,QAAOE,KACP,IAAAge,UAAShe,GAAW0B,UAAUyH,EAAAA,sBAAsBwE,aACpD,IAAAqQ,UAAShe,GAAW2B,QAAQwH,EAAAA,sBAAsB8U,cAClD,IAAAD,UAAShe,GAAW8B,YAAYqH,EAAAA,sBAAsB3I,WACtD,IAAAwd,UAAShe,GAAW6B,SAASsH,EAAAA,sBAAsB7I,QACnD,IAAA0d,UAAShe,GAAW+J,gBAAgB,eAEpC,IAAAiJ,aAAY,CACR7W,KAAM6D,EACNiT,aAAc,CACVlT,OAAQoJ,EAAAA,sBAAsBwE,WAC9BrM,UAAW6H,EAAAA,sBAAsB7H,UACjCpB,KAAM+d,EAAAA,YACNzd,SAAU2I,EAAAA,sBAAsB3I,SAChCF,MAAO6I,EAAAA,sBAAsB7I,MAC7BuJ,aAAc,eAK1B,IAAMqU,EAAYpT,SAASqT,eAAe,iCACpCC,GAAO,IAAA5F,YAAW0F,GAElBG,EAAavT,SAASgH,cAAc,cACtCuM,IACAA,EAAWC,QAAU,WACjBC,YAAW,WACPH,EAAKI,SACR,GAxDqB,IAyDzB,GAGL,IAAMC,EACF,oBAAC,EAAA7U,0BAAD,CACI5J,UAAWA,EACXqJ,SAAUA,EAAAA,SACVoB,UAAWA,EAAAA,UACXhG,qBAAsBA,EAAAA,qBACtB2C,sBAAuBA,EAAAA,sBACvBxI,SAAUA,EAAAA,SACV4F,WAAYA,EAAAA,WACZ3F,YAAaA,EAAAA,YACb4G,QAASA,EAAAA,QACT/E,aAAcA,EAAAA,aACdiK,MAAOA,EAAAA,MACPpH,sBAAuBA,EAAAA,wBAI/B6a,EAAKM,OAAOD,GAEZd,EAAAA,eAAeG,OAAS,WACpBM,EAAKI,UAGLX,EAAmBrC,MAAMvE,KAAM8G,UAClC,CACJ,C","sources":["webpack://post-expirator/./assets/jsx/components/ButtonsPanel.jsx","webpack://post-expirator/./assets/jsx/components/CheckboxControl.jsx","webpack://post-expirator/./assets/jsx/components/DateOffsetPreview.jsx","webpack://post-expirator/./assets/jsx/components/DateTimePicker.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanel.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelAfterActionField.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelBlockEditor.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelBulkEdit.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelClassicEditor.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelQuickEdit.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelTop.jsx","webpack://post-expirator/./assets/jsx/components/NonceControl.jsx","webpack://post-expirator/./assets/jsx/components/PostTypeSettingsPanel.jsx","webpack://post-expirator/./assets/jsx/components/PostTypesSettingsPanels.jsx","webpack://post-expirator/./assets/jsx/components/SelectControl.jsx","webpack://post-expirator/./assets/jsx/components/SettingRow.jsx","webpack://post-expirator/./assets/jsx/components/SettingsFieldset.jsx","webpack://post-expirator/./assets/jsx/components/SettingsForm.jsx","webpack://post-expirator/./assets/jsx/components/SettingsSection.jsx","webpack://post-expirator/./assets/jsx/components/SettingsTable.jsx","webpack://post-expirator/./assets/jsx/components/Spinner.jsx","webpack://post-expirator/./assets/jsx/components/SubmitButton.jsx","webpack://post-expirator/./assets/jsx/components/TextControl.jsx","webpack://post-expirator/./assets/jsx/components/ToggleArrowButton.jsx","webpack://post-expirator/./assets/jsx/components/ToggleCalendarDatePicker.jsx","webpack://post-expirator/./assets/jsx/components/TokensControl.jsx","webpack://post-expirator/./assets/jsx/components/TrueFalseControl.jsx","webpack://post-expirator/./assets/jsx/components/index.jsx","webpack://post-expirator/./assets/jsx/data.jsx","webpack://post-expirator/./assets/jsx/time.jsx","webpack://post-expirator/./assets/jsx/utils.jsx","webpack://post-expirator/./assets/jsx/components/css/dateOffsetPreview.css","webpack://post-expirator/./node_modules/css-loader/dist/runtime/api.js","webpack://post-expirator/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://post-expirator/./node_modules/react-dom/client.js","webpack://post-expirator/./assets/jsx/components/css/dateOffsetPreview.css?541a","webpack://post-expirator/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://post-expirator/external var \"ReactDOM\"","webpack://post-expirator/external var \"publishpressFutureBulkEditConfig\"","webpack://post-expirator/external var \"window\"","webpack://post-expirator/external var \"wp\"","webpack://post-expirator/external var \"wp.components\"","webpack://post-expirator/external var \"wp.data\"","webpack://post-expirator/external var \"wp.element\"","webpack://post-expirator/external var \"wp.hooks\"","webpack://post-expirator/external var \"wp.plugins\"","webpack://post-expirator/external var \"wp.url\"","webpack://post-expirator/webpack/bootstrap","webpack://post-expirator/webpack/runtime/compat get default export","webpack://post-expirator/webpack/runtime/define property getters","webpack://post-expirator/webpack/runtime/hasOwnProperty shorthand","webpack://post-expirator/webpack/runtime/make namespace object","webpack://post-expirator/webpack/runtime/nonce","webpack://post-expirator/./assets/jsx/bulk-edit.jsx"],"sourcesContent":["/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const ButtonsPanel = function (props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment, useState  } from \"@wordpress/element\";\nimport { CheckboxControl as WPCheckboxControl } from \"@wordpress/components\";\n\nexport const CheckboxControl = function (props) {\n    const [checked, setChecked] = useState(props.checked || false);\n\n    let description;\n\n    if (props.unescapedDescription) {\n        // If using this option, the HTML has to be escaped before injected into the JS interface.\n        description = <p className=\"description\" dangerouslySetInnerHTML={{ __html: props.description }}></p>;\n    } else {\n        description = <p className=\"description\">{props.description}</p>;\n    }\n\n    const onChange = function (value) {\n        setChecked(value);\n\n        if (props.onChange) {\n            props.onChange(value);\n        }\n    };\n\n    return (\n        <Fragment>\n            <WPCheckboxControl\n                label={props.label}\n                name={props.name}\n                id={props.name}\n                className={props.className}\n                checked={checked || false}\n                onChange={onChange}\n            />\n\n            {description}\n        </Fragment>\n    )\n}\n","import {\n    useState,\n    useEffect,\n    useRef,\n    Fragment\n} from '@wordpress/element';\nimport { addQueryArgs } from '@wordpress/url';\nimport { apiFetch } from '&wp';\n\nrequire('./css/dateOffsetPreview.css');\n\nexport const DateOffsetPreview = ({\n    offset,\n    label,\n    labelDatePreview,\n    labelOffsetPreview,\n    setValidationErrorCallback,\n    setHasPendingValidationCallback,\n    setHasValidDataCallback,\n    compactView = false\n}) => {\n    const [offsetPreview, setOffsetPreview] = useState('');\n    const [currentTime, setCurrentTime] = useState();\n\n    const apiRequestControllerRef = useRef(new AbortController());\n\n    const validateDateOffset = () => {\n        if (offset) {\n            const controller = apiRequestControllerRef.current;\n\n            if (controller) {\n                controller.abort();\n            }\n\n            apiRequestControllerRef.current = new AbortController();\n            const { signal } = apiRequestControllerRef.current;\n\n            setHasPendingValidationCallback(true);\n\n            apiFetch({\n                path: addQueryArgs(`publishpress-future/v1/settings/validate-expire-offset`),\n                method: 'POST',\n                data: {\n                    offset\n                },\n                signal,\n            }).then((result) => {\n                setHasPendingValidationCallback(false);\n\n                setHasValidDataCallback(result.isValid);\n                setValidationErrorCallback(result.message);\n\n                if (result.isValid) {\n                    setOffsetPreview(result.preview);\n                    setCurrentTime(result.currentTime);\n                } else {\n                    setOffsetPreview('');\n                }\n            }).catch((error) => {\n                if (error.name === 'AbortError') {\n                    return;\n                }\n\n                setHasPendingValidationCallback(false);\n                setHasValidDataCallback(false);\n                setValidationErrorCallback(error.message);\n                setOffsetPreview('');\n            });\n        }\n    }\n\n    useEffect(() => {\n        validateDateOffset();\n    }, [offset]);\n\n    const compactClass = compactView ? ' compact' : '';\n\n    return (\n        <Fragment>\n            { offset && (\n                <div className={'publishpress-future-date-preview' + compactClass}>\n                    <h4>{ label }</h4>\n                    <div className=\"publishpress-future-date-preview-body\">\n                        <div>\n                            <span className=\"publishpress-future-date-preview-label\">{ labelDatePreview }: </span>\n                            <span className=\"publishpress-future-date-preview-value\">{currentTime}</span>\n                        </div>\n                        <div>\n                            <span className=\"publishpress-future-date-preview-label\">{ labelOffsetPreview }: </span>\n                            <span className=\"publishpress-future-date-preview-value\">{offsetPreview}</span>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </Fragment>\n    )\n}\n\nexport default DateOffsetPreview;\n","import { normalizeUnixTimeToMilliseconds } from \"../time\";\nimport { DateTimePicker as WPDateTimePicker } from \"@wordpress/components\";\n\n\nexport const DateTimePicker = ({currentDate, onChange, is12Hour, startOfWeek}) => {\n    if (typeof currentDate === 'number') {\n        currentDate = normalizeUnixTimeToMilliseconds(currentDate);\n    }\n\n    return (\n        <WPDateTimePicker\n            currentDate={currentDate}\n            onChange={onChange}\n            __nextRemoveHelpButton={true}\n            is12Hour={is12Hour}\n            startOfWeek={startOfWeek}\n        />\n    )\n}\n","import { compact } from '../utils';\nimport { ToggleCalendarDatePicker } from './ToggleCalendarDatePicker';\nimport { PluginArea } from '@wordpress/plugins';\nimport { Fill, Slot, SlotFillProvider } from '@wordpress/components';\nimport { FutureActionPanelAfterActionField } from './FutureActionPanelAfterActionField';\nimport { FutureActionPanelTop } from './FutureActionPanelTop';\n\nconst { PanelRow, CheckboxControl, SelectControl, FormTokenField, Spinner, BaseControl } = wp.components;\nconst { Fragment, useEffect, useState } = wp.element;\nconst { decodeEntities } = wp.htmlEntities;\nconst { addQueryArgs } = wp.url;\nconst {\n    useSelect,\n    useDispatch\n} = wp.data;\nconst { apiFetch } = wp;\n\nexport const FutureActionPanel = (props) => {\n    const {\n        action,\n        date,\n        enabled,\n        terms,\n        taxonomy,\n        taxonomyName,\n        termsListByName,\n        termsListById,\n        isFetchingTerms,\n        calendarIsVisible,\n        hasValidData,\n        newStatus,\n    } = useSelect((select) => {\n        return {\n            action: select(props.storeName).getAction(),\n            date: select(props.storeName).getDate(),\n            enabled: select(props.storeName).getEnabled(),\n            terms: select(props.storeName).getTerms(),\n            taxonomy: select(props.storeName).getTaxonomy(),\n            taxonomyName: select(props.storeName).getTaxonomyName(),\n            termsListByName: select(props.storeName).getTermsListByName(),\n            termsListById: select(props.storeName).getTermsListById(),\n            isFetchingTerms: select(props.storeName).getIsFetchingTerms(),\n            calendarIsVisible: select(props.storeName).getCalendarIsVisible(),\n            hasValidData: select(props.storeName).getHasValidData(),\n            newStatus: select(props.storeName).getNewStatus(),\n        };\n    });\n\n    const [validationError, setValidationError] = useState('');\n\n    const {\n        setAction,\n        setDate,\n        setEnabled,\n        setTerms,\n        setTaxonomy,\n        setTermsListByName,\n        setTermsListById,\n        setTaxonomyName,\n        setIsFetchingTerms,\n        setCalendarIsVisible,\n        setHasValidData,\n        setNewStatus\n    } = useDispatch(props.storeName);\n\n    const mapTermsListById = (terms) => {\n        if (typeof terms !== 'object' || terms === null) {\n            return {};\n        }\n\n        return terms.map((term) => {\n            return termsListById[term];\n        });\n    }\n\n    const insertTerm = (term) => {\n        termsListByName[term] = { id: term, count: 0, description: \"\", link: \"\", name: term, slug: term, taxonomy: taxonomy };\n        termsListById[term] = term;\n        setTermsListByName(termsListByName);\n        setTermsListById(termsListById);\n        setTerms([...terms, term]);\n\n    }\n\n    const mapTermsListByName = (terms) => {\n        if (typeof terms !== 'object' || terms === null) {\n            return {};\n        }\n\n        return terms.map((term) => {\n            if (termsListByName[term]) {\n                return termsListByName[term].id;\n            }\n\n            insertTerm(term);\n\n            return term;\n        });\n    }\n\n    const callOnChangeData = (attribute, value) => {\n        if (typeof props.onChangeData === 'function') {\n            props.onChangeData(attribute, value);\n        }\n    }\n\n    const handleEnabledChange = (isChecked) => {\n        setEnabled(isChecked);\n\n        if (isChecked) {\n            setAction(props.action);\n            setDate(props.date);\n            setNewStatus(props.newStatus);\n            setTerms(props.terms);\n            setTaxonomy(props.taxonomy);\n\n            fetchTerms();\n        }\n\n        callOnChangeData('enabled', isChecked);\n    }\n\n    const handleActionChange = (value) => {\n        setAction(value);\n\n        callOnChangeData('action', value);\n    }\n\n    const handleNewStatusChange = (value) => {\n        setNewStatus(value);\n\n        callOnChangeData('newStatus', value);\n    }\n\n    const handleDateChange = (value) => {\n        setDate(value);\n\n        callOnChangeData('date', value);\n    }\n\n    const handleTermsChange = (value) => {\n        value = mapTermsListByName(value);\n\n        setTerms(value);\n\n        callOnChangeData('terms', value);\n    }\n\n    const fetchTerms = () => {\n        let termsListByName = {};\n        let termsListById = {};\n\n        if (!taxonomy) {\n            return;\n        }\n\n        setIsFetchingTerms(true);\n\n        apiFetch({\n            path: addQueryArgs(`publishpress-future/v1/terms/${taxonomy}`),\n        }).then((result) => {\n            result.terms.forEach(term => {\n                termsListByName[decodeEntities(term.name)] = term;\n                termsListById[term.id] = decodeEntities(term.name);\n            });\n\n            setTermsListByName(termsListByName);\n            setTermsListById(termsListById);\n            setTaxonomyName(decodeEntities(result.taxonomyName));\n            setIsFetchingTerms(false);\n        });\n    }\n\n    const storeCalendarIsVisibleOnStorage = (value) => {\n        localStorage.setItem('FUTURE_ACTION_CALENDAR_IS_VISIBLE_' + props.context, value ? '1' : '0');\n    }\n\n    const getCalendarIsVisibleFromStorage = () => {\n        return localStorage.getItem('FUTURE_ACTION_CALENDAR_IS_VISIBLE_' + props.context);\n    }\n\n    useEffect(() => {\n        if (props.autoEnableAndHideCheckbox) {\n            setEnabled(true);\n        } else {\n            setEnabled(props.enabled);\n        }\n\n        setAction(props.action);\n        setNewStatus(props.newStatus);\n        setDate(props.date);\n        setTerms(props.terms);\n        setTaxonomy(props.taxonomy);\n\n        if (getCalendarIsVisibleFromStorage() === null) {\n            setCalendarIsVisible(props.calendarIsVisible);\n        } else {\n            setCalendarIsVisible(getCalendarIsVisibleFromStorage() === '1' && ! props.hideCalendarByDefault);\n        }\n\n        // We need to get the value directly from the props because the value from the store is not updated yet\n        if (props.enabled) {\n            if (props.isCleanNewPost) {\n                // Force populate the default values\n                handleEnabledChange(true);\n            }\n\n            fetchTerms();\n        }\n    }, []);\n\n    useEffect(() => {\n        storeCalendarIsVisibleOnStorage(calendarIsVisible);\n    }, [calendarIsVisible]);\n\n    useEffect(() => {\n        if (hasValidData && props.onDataIsValid) {\n            props.onDataIsValid();\n        }\n\n        if (!hasValidData && props.onDataIsInvalid) {\n            props.onDataIsInvalid();\n        }\n    }, [hasValidData]);\n\n    let selectedTerms = [];\n    if (terms && terms.length > 0 && termsListById) {\n        selectedTerms = compact(mapTermsListById(terms));\n\n        if (typeof selectedTerms === 'string') {\n            selectedTerms = [];\n        }\n    }\n\n    let termsListByNameKeys = [];\n    if (typeof termsListByName === 'object' && termsListByName !== null) {\n        termsListByNameKeys = Object.keys(termsListByName);\n    }\n\n    const panelClass = calendarIsVisible ? 'future-action-panel' : 'future-action-panel hidden-calendar';\n    const contentPanelClass = calendarIsVisible ? 'future-action-panel-content' : 'future-action-panel-content hidden-calendar';\n    const datePanelClass = calendarIsVisible ? 'future-action-date-panel' : 'future-action-date-panel hidden-calendar';\n\n    let is24hour;\n    if (props.timeFormat === 'inherited') {\n        is24hour = !props.is12Hour;\n    } else {\n        is24hour = props.timeFormat === '24h';\n    }\n\n    const replaceCurlyBracketsWithLink = (string, href, target) => {\n        const parts = string.split('{');\n        const result = [];\n\n        result.push(parts.shift());\n\n        for (const part of parts) {\n            const [before, after] = part.split('}');\n\n            result.push(\n                <a href={href} target={target} key={href}>{before}</a>\n            );\n\n            result.push(after);\n        }\n\n        return result;\n    };\n\n    // Remove items from actions list if related to taxonomies and there is no taxonmoy for the post type\n    let actionsSelectOptions = props.actionsSelectOptions;\n    if (!props.taxonomy) {\n        actionsSelectOptions = props.actionsSelectOptions.filter((item) => {\n            return ['category', 'category-add', 'category-remove', 'category-remove-all'].indexOf(item.value) === -1;\n        });\n    }\n\n    const HelpText = replaceCurlyBracketsWithLink(props.strings.timezoneSettingsHelp, '/wp-admin/options-general.php#timezone_string', '_blank');\n    const displayTaxonomyField = String(action).includes('category') && action !== 'category-remove-all';\n\n    let termsFieldLabel = taxonomyName;\n    switch (action) {\n        case 'category':\n            termsFieldLabel = props.strings.newTerms.replace('%s', taxonomyName);\n            break;\n        case 'category-remove':\n            termsFieldLabel = props.strings.removeTerms.replace('%s', taxonomyName);\n            break;\n        case 'category-add':\n            termsFieldLabel = props.strings.addTerms.replace('%s', taxonomyName);\n            break;\n    }\n\n    const validateData = () => {\n        let valid = true;\n\n        if (!enabled) {\n            setValidationError('');\n            return true;\n        }\n\n        if (!action) {\n            setValidationError(props.strings.errorActionRequired);\n            valid = false;\n        }\n\n        if (!date) {\n            setValidationError(props.strings.errorDateRequired);\n            valid = false;\n        }\n\n        // Check if the date is in the past\n        if (date && new Date(date) < new Date()) {\n            setValidationError(props.strings.errorDateInPast);\n            valid = false;\n        }\n\n        const isTermRequired = ['category', 'category-add', 'category-remove'].includes(action);\n        const noTermIsSelected = terms.length === 0 || (terms.length === 1 && (terms[0] === '' || terms[0] === '0'));\n\n        if (isTermRequired && noTermIsSelected) {\n            setValidationError(props.strings.errorTermsRequired);\n            valid = false;\n        }\n\n        if (valid) {\n            setValidationError('');\n        }\n\n        return valid;\n    }\n\n    useEffect(() => {\n        if (!enabled) {\n            setHasValidData(true);\n            setValidationError('');\n\n            return;\n        }\n\n        setHasValidData(validateData());\n    }, [action, date, enabled, terms, taxonomy]);\n\n    // This adds a 'cancel' class to the input when the user clicks on the\n    // field to prevent the form from being submitted. This is a workaround\n    // for the issue on the quick-edit form where the form is submitted when\n    // the user presses the 'Enter' key trying to add a term to the field.\n    const forceIgnoreAutoSubmitOnEnter = (e) => {\n        jQuery(e.target).addClass('cancel');\n    }\n\n    return (\n        <SlotFillProvider>\n            <div className={panelClass}>\n                {props.autoEnableAndHideCheckbox && (\n                    <input type=\"hidden\" name={'future_action_enabled'} value={1} />\n                )}\n\n                <FutureActionPanelTop.Slot fillProps={{ storeName: props.storeName }} />\n\n                {!props.autoEnableAndHideCheckbox && (\n                    <PanelRow>\n                        <CheckboxControl\n                            label={props.strings.enablePostExpiration}\n                            checked={enabled || false}\n                            onChange={handleEnabledChange}\n                            className=\"future-action-enable-checkbox\"\n                        />\n                    </PanelRow>\n                )}\n\n                {enabled && (\n                    <Fragment>\n                        <PanelRow className={contentPanelClass + ' future-action-full-width'}>\n                            <SelectControl\n                                label={props.strings.action}\n                                value={action}\n                                options={actionsSelectOptions}\n                                onChange={handleActionChange}\n                                className=\"future-action-select-action\"\n                            />\n                        </PanelRow>\n\n                        <FutureActionPanelAfterActionField.Slot fillProps={{ storeName: props.storeName }} />\n\n                        {action === 'change-status' &&\n                            <PanelRow className=\"new-status\">\n                                <SelectControl\n                                    label={props.strings.newStatus}\n                                    options={props.statusesSelectOptions}\n                                    value={newStatus}\n                                    onChange={handleNewStatusChange}\n                                    className=\"future-action-select-new-status\"\n                                />\n                            </PanelRow>\n                        }\n\n                        {\n                            displayTaxonomyField && (\n                                isFetchingTerms && (\n                                    <PanelRow>\n                                        <BaseControl label={taxonomyName}>\n                                            {`${props.strings.loading} (${taxonomyName})`}\n                                            <Spinner />\n                                        </BaseControl>\n                                    </PanelRow>\n                                )\n                                || (!taxonomy && (\n                                    <PanelRow>\n                                        <BaseControl label={taxonomyName} className=\"future-action-warning\">\n                                            <div>\n                                                <i className=\"dashicons dashicons-warning\"></i> {props.strings.noTaxonomyFound}\n                                            </div>\n                                        </BaseControl>\n                                    </PanelRow>\n                                )\n                                    || (\n                                        termsListByNameKeys.length === 0 && (\n                                            <PanelRow>\n                                                <BaseControl label={taxonomyName} className=\"future-action-warning\">\n                                                    <div>\n                                                        <i className=\"dashicons dashicons-warning\"></i> {props.strings.noTermsFound}\n                                                    </div>\n                                                </BaseControl>\n                                            </PanelRow>\n                                        )\n                                        || (\n                                            <PanelRow className=\"future-action-full-width\">\n                                                <BaseControl>\n                                                    <FormTokenField\n                                                        label={termsFieldLabel}\n                                                        value={selectedTerms}\n                                                        suggestions={termsListByNameKeys}\n                                                        onChange={handleTermsChange}\n                                                        placeholder={props.strings.addTermsPlaceholder}\n                                                        className=\"future-action-terms\"\n                                                        maxSuggestions={1000}\n                                                        onFocus={forceIgnoreAutoSubmitOnEnter}\n                                                        __experimentalExpandOnFocus={true}\n                                                        __experimentalAutoSelectFirstMatch={true}\n                                                    />\n                                                </BaseControl>\n                                            </PanelRow>\n                                        )\n                                    )\n                                )\n                            )\n                        }\n\n                        <PanelRow className={datePanelClass}>\n                            <ToggleCalendarDatePicker\n                                currentDate={date}\n                                onChangeDate={handleDateChange}\n                                onToggleCalendar={() => setCalendarIsVisible(!calendarIsVisible)}\n                                is12Hour={!is24hour}\n                                startOfWeek={props.startOfWeek}\n                                isExpanded={calendarIsVisible}\n                                strings={props.strings}\n                            />\n                        </PanelRow>\n\n                        <PanelRow>\n                            <div className=\"future-action-help-text\">\n                                <hr />\n\n                                <span className=\"dashicons dashicons-info\"></span> {HelpText}\n                            </div>\n                        </PanelRow>\n\n                        {!hasValidData && (\n                            <PanelRow>\n                                <BaseControl className=\"notice notice-error\">\n                                    <div>{validationError}</div>\n                                </BaseControl>\n                            </PanelRow>\n                        )}\n                    </Fragment>\n                )}\n            </div>\n            <PluginArea scope='publishpress-future' />\n        </SlotFillProvider>\n    );\n};\n","import { Slot, Fill } from '@wordpress/components';\n\nexport const FutureActionPanelAfterActionField = ({ children }) => (\n    <Fill name=\"FutureActionPanelAfterActionField\">\n        {children}\n    </Fill>\n);\n\nconst FutureActionPanelAfterActionFieldSlot = (props) => (\n    <Slot name=\"FutureActionPanelAfterActionField\" {...props} />\n);\n\nFutureActionPanelAfterActionField.Slot = FutureActionPanelAfterActionFieldSlot;\n\nexport default FutureActionPanelAfterActionField;\n","import { FutureActionPanel } from './';\n\nexport const FutureActionPanelBlockEditor = (props) => {\n    const { PluginDocumentSettingPanel } = wp.editPost;\n    const { useDispatch, select } = wp.data;\n\n    const { editPost } = useDispatch('core/editor');\n\n    const editPostAttribute = (newAttribute) => {\n        const attribute = {\n            publishpress_future_action: {}\n        };\n\n        // For each property on newAttribute, set the value on attribute\n        for (const [name, value] of Object.entries(newAttribute)) {\n            attribute.publishpress_future_action[name] = value;\n        }\n\n        editPost(attribute);\n    }\n\n    const onChangeData = (attribute, value) => {\n        const store = select(props.storeName);\n\n        const newAttribute = {\n            'enabled': store.getEnabled()\n        }\n\n        if (newAttribute.enabled) {\n            newAttribute['action'] = store.getAction();\n            newAttribute['newStatus'] = store.getNewStatus();\n            newAttribute['date'] = store.getDate();\n            newAttribute['terms'] = store.getTerms();\n            newAttribute['taxonomy'] = store.getTaxonomy();\n            newAttribute['extraData'] = store.getExtraData();\n        }\n\n        editPostAttribute(newAttribute);\n    }\n\n    const data = select('core/editor').getEditedPostAttribute('publishpress_future_action');\n\n    const { lockPostSaving, unlockPostSaving } = useDispatch('core/editor');\n\n    const onDataIsValid = () => {\n        unlockPostSaving('future-action');\n    }\n\n    const onDataIsInvalid = () => {\n        lockPostSaving('future-action');\n    }\n\n    return (\n        <PluginDocumentSettingPanel\n            name={'publishpress-future-action-panel'}\n            title={props.strings.panelTitle}\n            initialOpen={props.postTypeDefaultConfig.autoEnable}\n            className={'post-expirator-panel'}>\n            <div id='publishpress-future-block-editor'>\n                <FutureActionPanel\n                    context={'block-editor'}\n                    postType={props.postType}\n                    isCleanNewPost={props.isCleanNewPost}\n                    actionsSelectOptions={props.actionsSelectOptions}\n                    statusesSelectOptions={props.statusesSelectOptions}\n                    enabled={data.enabled}\n                    calendarIsVisible={true}\n                    action={data.action}\n                    newStatus={data.newStatus}\n                    date={data.date}\n                    terms={data.terms}\n                    taxonomy={data.taxonomy}\n                    taxonomyName={props.taxonomyName}\n                    onChangeData={onChangeData}\n                    is12Hour={props.is12Hour}\n                    timeFormat={props.timeFormat}\n                    startOfWeek={props.startOfWeek}\n                    storeName={props.storeName}\n                    strings={props.strings}\n                    onDataIsValid={onDataIsValid}\n                    hideCalendarByDefault={props.hideCalendarByDefault}\n                    onDataIsInvalid={onDataIsInvalid} />\n            </div>\n        </PluginDocumentSettingPanel>\n    );\n};\n","import { FutureActionPanel, SelectControl } from '.';\nimport { getElementByName } from '../utils';\n\nexport const FutureActionPanelBulkEdit = (props) => {\n    const { useSelect, useDispatch, select } = wp.data;\n    const { useEffect } = wp.element;\n\n    const onChangeData = (attribute, value) => {\n        getElementByName('future_action_bulk_enabled').value = select(props.storeName).getEnabled() ? 1 : 0;\n        getElementByName('future_action_bulk_action').value = select(props.storeName).getAction();\n        getElementByName('future_action_bulk_new_status').value = select(props.storeName).getNewStatus();\n        getElementByName('future_action_bulk_date').value = select(props.storeName).getDate();\n        getElementByName('future_action_bulk_terms').value = select(props.storeName).getTerms().join(',');\n        getElementByName('future_action_bulk_taxonomy').value = select(props.storeName).getTaxonomy();\n    }\n\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const newStatus = useSelect((select) => select(props.storeName).getNewStatus(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n    const changeAction = useSelect((select) => select(props.storeName).getChangeAction(), []);\n    const hasValidData = useSelect((select) => select(props.storeName).getHasValidData(), []);\n\n    const {\n        setChangeAction\n    } = useDispatch(props.storeName);\n\n    let termsString = terms;\n    if (typeof terms === 'object') {\n        termsString = terms.join(',');\n    }\n\n    const handleStrategyChange = (value) => {\n        setChangeAction(value);\n    };\n\n    const options = [\n        { value: 'no-change', label: props.strings.noChange },\n        { value: 'change-add', label: props.strings.changeAdd },\n        { value: 'add-only', label: props.strings.addOnly },\n        { value: 'change-only', label: props.strings.changeOnly },\n        { value: 'remove-only', label: props.strings.removeOnly },\n    ];\n\n    const optionsToDisplayPanel = ['change-add', 'add-only', 'change-only'];\n\n    useEffect(() => {\n        // We are not using onDataIsValid and onDataIsInvalid because we need to enable/disable the button\n        // also based on the changeAction value.\n        if (hasValidData || changeAction === 'no-change') {\n            jQuery('#bulk_edit').prop('disabled', false);\n        } else {\n            jQuery('#bulk_edit').prop('disabled', true);\n        }\n    }, [hasValidData, changeAction]);\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <SelectControl\n                label={props.strings.futureActionUpdate}\n                name={'future_action_bulk_change_action'}\n                value={changeAction}\n                options={options}\n                onChange={handleStrategyChange}\n            />\n\n            {optionsToDisplayPanel.includes(changeAction) && (\n                <FutureActionPanel\n                    context={'bulk-edit'}\n                    autoEnableAndHideCheckbox={true}\n                    postType={props.postType}\n                    isCleanNewPost={props.isNewPost}\n                    actionsSelectOptions={props.actionsSelectOptions}\n                    statusesSelectOptions={props.statusesSelectOptions}\n                    enabled={true}\n                    calendarIsVisible={false}\n                    action={action}\n                    newStatus={newStatus}\n                    date={date}\n                    terms={terms}\n                    taxonomy={taxonomy}\n                    taxonomyName={props.taxonomyName}\n                    onChangeData={onChangeData}\n                    is12Hour={props.is12Hour}\n                    timeFormat={props.timeFormat}\n                    startOfWeek={props.startOfWeek}\n                    storeName={props.storeName}\n                    hideCalendarByDefault={props.hideCalendarByDefault}\n                    strings={props.strings} />\n            )}\n\n            {/* Bulk edit JS code will save only fields with name inside the edit row */}\n            <input type=\"hidden\" name={'future_action_bulk_enabled'} value={enabled ? 1 : 0} />\n            <input type=\"hidden\" name={'future_action_bulk_action'} value={action} />\n            <input type=\"hidden\" name={'future_action_bulk_new_status'} value={newStatus} />\n            <input type=\"hidden\" name={'future_action_bulk_date'} value={date} />\n            <input type=\"hidden\" name={'future_action_bulk_terms'} value={termsString} />\n            <input type=\"hidden\" name={'future_action_bulk_taxonomy'} value={taxonomy} />\n            <input type=\"hidden\" name={'future_action_bulk_view'} value=\"bulk-edit\" />\n            <input type=\"hidden\" name={'_future_action_nonce'} value={props.nonce} />\n        </div>\n    );\n};\n","import { FutureActionPanel } from \"./\";\nimport { select, useSelect } from \"@wordpress/data\";\nimport { useEffect } from \"@wordpress/element\";\n\nexport const FutureActionPanelClassicEditor = (props) => {\n    const browserTimezoneOffset = new Date().getTimezoneOffset();\n\n    const getElementByName = (name) => {\n        return document.getElementsByName(name)[0];\n    }\n\n    const onChangeData = (attribute, value) => {\n        const store = select(props.storeName);\n\n        getElementByName('future_action_enabled').value = store.getEnabled() ? 1 : 0;\n        getElementByName('future_action_action').value = store.getAction();\n        getElementByName('future_action_new_status').value = store.getNewStatus();\n        getElementByName('future_action_date').value = store.getDate();\n        getElementByName('future_action_terms').value = store.getTerms().join(',');\n        getElementByName('future_action_taxonomy').value = store.getTaxonomy();\n    }\n\n    const getTermsFromElementByName = (name) => {\n        const element = getElementByName(name);\n        if (!element) {\n            return [];\n        }\n\n        let terms = element.value.split(',');\n\n        if (terms.length === 1 && terms[0] === '') {\n            terms = [];\n        }\n\n        return terms.map(term => parseInt(term));\n    }\n\n    const getElementValueByName = (name) => {\n        const element = getElementByName(name);\n        if (!element) {\n            return '';\n        }\n\n        return element.value;\n    }\n\n    const data = {\n        enabled: getElementValueByName('future_action_enabled') === '1',\n        action: getElementValueByName('future_action_action'),\n        newStatus: getElementValueByName('future_action_new_status'),\n        date: getElementValueByName('future_action_date'),\n        terms: getTermsFromElementByName('future_action_terms'),\n        taxonomy: getElementValueByName('future_action_taxonomy'),\n    };\n\n    const onDataIsValid = () => {\n        jQuery('#publish').prop('disabled', false);\n    }\n\n    const onDataIsInvalid = () => {\n        jQuery('#publish').prop('disabled', true);\n    }\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <FutureActionPanel\n                context={'classic-editor'}\n                postType={props.postType}\n                isCleanNewPost={props.isNewPost}\n                actionsSelectOptions={props.actionsSelectOptions}\n                statusesSelectOptions={props.statusesSelectOptions}\n                enabled={data.enabled}\n                calendarIsVisible={true}\n                action={data.action}\n                newStatus={data.newStatus}\n                date={data.date}\n                terms={data.terms}\n                taxonomy={data.taxonomy}\n                taxonomyName={props.taxonomyName}\n                onChangeData={onChangeData}\n                is12Hour={props.is12Hour}\n                timeFormat={props.timeFormat}\n                startOfWeek={props.startOfWeek}\n                storeName={props.storeName}\n                strings={props.strings}\n                onDataIsValid={onDataIsValid}\n                hideCalendarByDefault={props.hideCalendarByDefault}\n                onDataIsInvalid={onDataIsInvalid} />\n        </div>\n    );\n};\n","import { FutureActionPanel } from './';\nimport { useSelect, select } from '@wordpress/data';\nimport { useEffect } from '@wordpress/element';\n\nexport const FutureActionPanelQuickEdit = (props) => {\n    const onChangeData = (attribute, value) => {};\n\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n    const hasValidData = useSelect((select) => select(props.storeName).getHasValidData(), []);\n    const newStatus = useSelect((select) => select(props.storeName).getNewStatus(), []);\n\n    let termsString = terms;\n    if (typeof terms === 'object') {\n        termsString = terms.join(',');\n    }\n\n    const onDataIsValid = () => {\n        jQuery('.button-primary.save').prop('disabled', false);\n    }\n\n    const onDataIsInvalid = () => {\n        jQuery('.button-primary.save').prop('disabled', true);\n    }\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <FutureActionPanel\n                context={'quick-edit'}\n                postType={props.postType}\n                isCleanNewPost={props.isNewPost}\n                actionsSelectOptions={props.actionsSelectOptions}\n                statusesSelectOptions={props.statusesSelectOptions}\n                enabled={enabled}\n                calendarIsVisible={false}\n                action={action}\n                newStatus={newStatus}\n                date={date}\n                terms={terms}\n                taxonomy={taxonomy}\n                taxonomyName={props.taxonomyName}\n                onChangeData={onChangeData}\n                is12Hour={props.is12Hour}\n                timeFormat={props.timeFormat}\n                startOfWeek={props.startOfWeek}\n                storeName={props.storeName}\n                strings={props.strings}\n                onDataIsValid={onDataIsValid}\n                hideCalendarByDefault={props.hideCalendarByDefault}\n                onDataIsInvalid={onDataIsInvalid} />\n\n            {/* Quick edit JS code will save only fields with name inside the edit row */}\n            <input type=\"hidden\" name={'future_action_enabled'} value={enabled ? 1 : 0} />\n            <input type=\"hidden\" name={'future_action_action'} value={action ? action : ''} />\n            <input type=\"hidden\" name={'future_action_new_status'} value={newStatus ? newStatus : ''} />\n            <input type=\"hidden\" name={'future_action_date'} value={date ? date : ''} />\n            <input type=\"hidden\" name={'future_action_terms'} value={termsString ? termsString : ''} />\n            <input type=\"hidden\" name={'future_action_taxonomy'} value={taxonomy ? taxonomy : ''} />\n            <input type=\"hidden\" name={'future_action_view'} value=\"quick-edit\" />\n            <input type=\"hidden\" name={'_future_action_nonce'} value={props.nonce} />\n        </div>\n    );\n};\n","import { Slot, Fill } from '@wordpress/components';\n\nexport const FutureActionPanelTop = ({ children }) => (\n    <Fill name=\"FutureActionPanelTop\">\n        {children}\n    </Fill>\n);\n\nconst FutureActionPanelTopSlot = (props) => (\n    <Slot name=\"FutureActionPanelTop\" {...props} />\n);\n\nFutureActionPanelTop.Slot = FutureActionPanelTopSlot;\n\nexport default FutureActionPanelTop;\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"@wordpress/element\";\n\nexport const NonceControl = function (props) {\n    if (! props.name) {\n        props.name = '_wpnonce';\n    }\n\n    if (! props.referrer) {\n        props.referrer = true;\n    }\n\n    return (\n        <Fragment>\n            <input type=\"hidden\" name={props.name} id={props.name} value={props.nonce} />\n\n            {props.referrer &&\n                <input type=\"hidden\" name=\"_wp_http_referer\" value={props.referrer}/>\n            }\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nimport {\n    SettingRow,\n    SettingsTable,\n    SelectControl,\n    TextControl,\n    TokensControl,\n    CheckboxControl\n} from './';\nimport { useEffect, useState } from '@wordpress/element';\nimport { addQueryArgs } from '@wordpress/url';\nimport { applyFilters } from '@wordpress/hooks';\nimport { apiFetch } from '&wp';\nimport DateOffsetPreview from './DateOffsetPreview';\n\nconst { PanelRow } = wp.components;\n\nexport const PostTypeSettingsPanel = function (props) {\n    const originalExpireTypeList = props.expireTypeList[props.postType];\n\n    const [postTypeTaxonomy, setPostTypeTaxonomy] = useState(props.settings.taxonomy);\n    const [termOptions, setTermOptions] = useState([]);\n    const [termsSelectIsLoading, setTermsSelectIsLoading] = useState(false);\n    const [selectedTerms, setSelectedTerms] = useState([]);\n    const [settingHowToExpire, setSettingHowToExpire] = useState(props.settings.howToExpire);\n    const [isActive, setIsActive] = useState(props.settings.active);\n    const [expireOffset, setExpireOffset] = useState(props.settings.defaultExpireOffset);\n    const [emailNotification, setEmailNotification] = useState(props.settings.emailNotification);\n    const [isAutoEnabled, setIsAutoEnabled] = useState(props.settings.autoEnabled);\n    const [hasValidData, setHasValidData] = useState(true);\n    const [validationError, setValidationError] = useState('');\n    const [taxonomyLabel, setTaxonomyLabel] = useState('');\n    const [howToExpireList, setHowToExpireList] = useState(originalExpireTypeList);\n    const [newStatus, setNewStatus] = useState(props.settings.newStatus);\n    const [hasPendingValidation, setHasPendingValidation] = useState(false);\n\n    const offset = expireOffset ? expireOffset : props.settings.globalDefaultExpireOffset;\n\n    const taxonomyRelatedActions = [\n        'category',\n        'category-add',\n        'category-remove',\n        'category-remove-all'\n    ];\n\n    const onChangeTaxonomy = function (value) {\n        setPostTypeTaxonomy(value);\n    };\n\n    const onChangeTerms = (value) => {\n        setSelectedTerms(value);\n    };\n\n    const onChangeHowToExpire = (value) => {\n        setSettingHowToExpire(value);\n    }\n\n    const onChangeActive = (value) => {\n        setIsActive(value);\n    }\n\n    const onChangeExpireOffset = (value) => {\n        setExpireOffset(value);\n    }\n\n    const onChangeEmailNotification = (value) => {\n        setEmailNotification(value);\n    }\n\n    const onChangeAutoEnabled = (value) => {\n        setIsAutoEnabled(value);\n    }\n\n    useEffect(() => {\n        // Remove items from expireTypeList if related to taxonomies and there is no taxonmoy for the post type\n        if (props.taxonomiesList.length === 0) {\n            let newExpireTypeList = [];\n\n            newExpireTypeList = howToExpireList.filter((item) => {\n                return taxonomyRelatedActions.indexOf(item.value) === -1;\n            });\n\n            setHowToExpireList(newExpireTypeList);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (!postTypeTaxonomy || !props.taxonomiesList) {\n            return;\n        }\n\n        setTermsSelectIsLoading(true);\n        apiFetch({\n            path: addQueryArgs(`publishpress-future/v1/terms/${postTypeTaxonomy}`),\n        }).then((result) => {\n            let options = [];\n\n            let settingsTermsOptions = null;\n            let option;\n\n            result.terms.forEach(term => {\n                option = { value: term.id, label: term.name };\n                options.push(option);\n\n                if (postTypeTaxonomy === props.settings.taxonomy && props.settings.terms.includes(term.id)) {\n                    if (settingsTermsOptions === null) {\n                        settingsTermsOptions = [];\n                    }\n\n                    settingsTermsOptions.push(option.label);\n                }\n            });\n\n            setTermOptions(options);\n            setSelectedTerms(settingsTermsOptions);\n            setTermsSelectIsLoading(false);\n        });\n\n        props.taxonomiesList.forEach((taxonomy) => {\n            if (taxonomy.value === postTypeTaxonomy) {\n                setTaxonomyLabel(taxonomy.label);\n            }\n        });\n    }, [postTypeTaxonomy]);\n\n    useEffect(() => {\n        if (!taxonomyLabel) {\n            return;\n        }\n\n        // Update the list of actions replacing the taxonomy name.\n        let newExpireTypeList = [];\n\n        originalExpireTypeList.forEach((expireType) => {\n            let label = expireType.label;\n\n            if (taxonomyRelatedActions.indexOf(expireType.value) !== -1) {\n                label = label.replace('%s', taxonomyLabel.toLowerCase());\n            }\n\n            newExpireTypeList.push({\n                value: expireType.value,\n                label: label\n            });\n        });\n\n        setHowToExpireList(newExpireTypeList);\n    }, [taxonomyLabel]);\n\n    useEffect(() => {\n        if (hasValidData && props.onDataIsValid) {\n            props.onDataIsValid(props.postType);\n        }\n\n        if (!hasValidData && props.onDataIsInvalid) {\n            props.onDataIsInvalid(props.postType);\n        }\n    }, [hasValidData]);\n\n    useEffect(() => {\n        if (hasPendingValidation && props.onValidationStarted) {\n            props.onValidationStarted(props.postType);\n        }\n\n        if (!hasPendingValidation && props.onValidationFinished) {\n            props.onValidationFinished(props.postType);\n        }\n    }, [hasPendingValidation]);\n\n    const termOptionsLabels = termOptions.map((term) => term.label);\n\n    let settingsRows = [\n        <SettingRow label={props.text.fieldActive} key={'expirationdate_activemeta-' + props.postType}>\n            <CheckboxControl\n                name={'expirationdate_activemeta-' + props.postType}\n                checked={isActive || false}\n                label={props.text.fieldActiveLabel}\n                onChange={onChangeActive}\n            />\n        </SettingRow>\n    ];\n\n    if (isActive) {\n        settingsRows.push(\n            <SettingRow label={props.text.fieldAutoEnable} key={'expirationdate_autoenable-' + props.postType}>\n                <CheckboxControl\n                    name={'expirationdate_autoenable-' + props.postType}\n                    checked={isAutoEnabled || false}\n                    label={props.text.fieldAutoEnableLabel}\n                    onChange={onChangeAutoEnabled}\n                />\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldTaxonomy} key={'expirationdate_taxonomy-' + props.postType}>\n                <SelectControl\n                    name={'expirationdate_taxonomy-' + props.postType}\n                    options={props.taxonomiesList}\n                    selected={postTypeTaxonomy}\n                    noItemFoundMessage={props.text.noItemsfound}\n                    description={props.text.fieldTaxonomyDescription}\n                    data={props.postType}\n                    onChange={onChangeTaxonomy}\n                >\n                </SelectControl>\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldHowToExpire} key={'expirationdate_expiretype-' + props.postType}>\n                <SelectControl\n                    name={'expirationdate_expiretype-' + props.postType}\n                    className={'pe-howtoexpire'}\n                    options={howToExpireList}\n                    description={props.text.fieldHowToExpireDescription}\n                    selected={settingHowToExpire}\n                    onChange={onChangeHowToExpire}\n                />\n\n                {settingHowToExpire === 'change-status' &&\n                    <SelectControl\n                        name={'expirationdate_newstatus-' + props.postType}\n                        options={props.statusesList}\n                        selected={newStatus}\n                        onChange={setNewStatus}\n                    />\n                }\n\n                {(props.taxonomiesList.length > 0 && (['category', 'category-add', 'category-remove'].indexOf(settingHowToExpire) > -1)) &&\n                    <TokensControl\n                        label={props.text.fieldTerm}\n                        name={'expirationdate_terms-' + props.postType}\n                        options={termOptionsLabels}\n                        value={selectedTerms}\n                        isLoading={termsSelectIsLoading}\n                        onChange={onChangeTerms}\n                        description={props.text.fieldTermDescription}\n                        maxSuggestions={1000}\n                        expandOnFocus={true}\n                        autoSelectFirstMatch={true}\n                    />\n                }\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldDefaultDateTimeOffset} key={'expired-custom-date-' + props.postType}>\n                <TextControl\n                    name={'expired-custom-date-' + props.postType}\n                    value={expireOffset}\n                    loading={hasPendingValidation}\n                    placeholder={props.settings.globalDefaultExpireOffset}\n                    description={props.text.fieldDefaultDateTimeOffsetDescription}\n                    unescapedDescription={true}\n                    onChange={onChangeExpireOffset}\n                />\n\n                <DateOffsetPreview\n                    offset={offset}\n                    label={props.text.datePreview}\n                    labelDatePreview={props.text.datePreviewCurrent}\n                    labelOffsetPreview={props.text.datePreviewComputed}\n                    setValidationErrorCallback={setValidationError}\n                    setHasPendingValidationCallback={setHasPendingValidation}\n                    setHasValidDataCallback={setHasValidData}\n                />\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldWhoToNotify} key={'expirationdate_emailnotification-' + props.postType}>\n                <TextControl\n                    name={'expirationdate_emailnotification-' + props.postType}\n                    className=\"large-text\"\n                    value={emailNotification}\n                    description={props.text.fieldWhoToNotifyDescription}\n                    onChange={onChangeEmailNotification}\n                />\n            </SettingRow>\n        );\n    }\n\n    settingsRows = applyFilters('expirationdate_settings_posttype', settingsRows, props, isActive, useState);\n\n    const fieldSetClassNames = props.isVisible ? 'pe-settings-fieldset' : 'pe-settings-fieldset hidden';\n\n    return (\n        <div className={fieldSetClassNames}>\n            <SettingsTable bodyChildren={settingsRows} />\n\n            {! hasValidData && (\n                <PanelRow>\n                    <div className=\"publishpress-future-notice publishpress-future-notice-error\">\n                        <strong>{props.text.error}:</strong> {validationError}\n                    </div>\n                </PanelRow>\n            )}\n        </div>\n    );\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nimport { PostTypeSettingsPanel } from \"./\";\nimport { useState } from \"@wordpress/element\";\n\nexport const PostTypesSettingsPanels = function (props) {\n    const [currentTab, setCurrentTab] = useState(Object.keys(props.settings)[0]);\n\n    let panels = [];\n\n    for (const [postType, postTypeSettings] of Object.entries(props.settings)) {\n        panels.push(\n            <PostTypeSettingsPanel\n                legend={postTypeSettings.label}\n                text={props.text}\n                postType={postType}\n                settings={postTypeSettings}\n                expireTypeList={props.expireTypeList}\n                taxonomiesList={props.taxonomiesList[postType]}\n                statusesList={props.statusesList[postType]}\n                key={`${postType}-panel`}\n                onDataIsValid={props.onDataIsValid}\n                onDataIsInvalid={props.onDataIsInvalid}\n                onValidationStarted={props.onValidationStarted}\n                onValidationFinished={props.onValidationFinished}\n                isVisible={currentTab === postType}\n            />\n        );\n    }\n\n    const onSelectTab = (event) => {\n        event.preventDefault();\n        setCurrentTab(event.target.hash.replace('#', '').replace('-panel', ''));\n    }\n\n    let tabs = [];\n    let selected = false;\n\n    for (const [postType, postTypeSettings] of Object.entries(props.settings)) {\n        selected = currentTab === postType;\n        tabs.push(\n            <a href={`#${postType}-panel`}\n                className={\"nav-tab \" + (selected ? 'nav-tab-active':'')}\n                key={`${postType}-tab`}\n                onClick={onSelectTab}\n            >\n                {postTypeSettings.label}\n            </a>\n        );\n    }\n\n    return (\n        <div>\n            <nav className=\"nav-tab-wrapper\">\n                {tabs}\n            </nav>\n            {panels}\n        </div>\n    );\n}\n\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"@wordpress/element\";\nimport { SelectControl as WPSelectControl } from \"@wordpress/components\";\n\nexport const SelectControl = function (props) {\n    const onChange = (value) => {\n        props.onChange(value);\n    };\n\n    return (\n        <Fragment>\n            {props.options.length === 0 && (\n                <div>{props.noItemFoundMessage}</div>\n            )}\n\n            {props.options.length > 0 && (\n                <WPSelectControl\n                    label={props.label}\n                    name={props.name}\n                    id={props.name}\n                    className={props.className}\n                    value={props.selected}\n                    onChange={onChange}\n                    data-data={props.data}\n                    options={props.options}\n                />\n            )}\n\n            {props.children}\n\n            <p className=\"description\">{props.description}</p>\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"@wordpress/element\";\n\nexport const SettingRow = function (props) {\n    return (\n        <tr valign=\"top\">\n            <th scope=\"row\">\n                <label htmlFor=\"\">{props.label}</label>\n            </th>\n            <td>\n                {props.children}\n            </td>\n        </tr>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsFieldset = function (props) {\n    return (\n        <fieldset className={props.className}>\n                <legend>{props.legend}</legend>\n                {props.children}\n        </fieldset>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsForm = function (props) {\n    return (\n        <form method=\"post\">\n            {props.children}\n        </form>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"@wordpress/element\";\n\nexport const SettingsSection = function (props) {\n    return (\n        <Fragment>\n            <h2>{props.title}</h2>\n            <p>{props.description}</p>\n            {props.children}\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsTable = function (props) {\n    return (\n        <table className=\"form-table\">\n            <tbody>\n                {props.bodyChildren}\n            </tbody>\n        </table>\n    )\n}\n","/*\n * Copyright (c) 2024. PublishPress, All rights reserved.\n */\nexport const Spinner = function (props) {\n    return (\n        <span className=\"publishpress-future-spinner\"><div></div><div></div><div></div><div></div></span>\n    );\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SubmitButton = function (props) {\n    return (\n        <input\n            type=\"submit\"\n            name={props.name}\n            value={props.text}\n            disabled={props.disabled}\n            className=\"button-primary\"\n        />\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"@wordpress/element\";\nimport { TextControl as WPTextControl } from \"@wordpress/components\";\nimport { Spinner } from \"./\";\n\nexport const TextControl = function (props) {\n    let description;\n\n    if (props.unescapedDescription) {\n        // If using this option, the HTML has to be escaped before injected into the JS interface.\n        description = <p className=\"description\" dangerouslySetInnerHTML={{ __html: props.description }}></p>;\n    } else {\n        description = <p className=\"description\">{props.description}</p>;\n    }\n\n    const onChange = function (value) {\n        if (props.onChange) {\n            props.onChange(value);\n        }\n    };\n\n    let className = props.className ? props.className : '';\n\n    if (props.loading) {\n        className += ' publishpress-future-loading publishpress-future-loading-input';\n    }\n\n    return (\n        <Fragment>\n            <div className={className}>\n                <WPTextControl\n                    type=\"text\"\n                    label={props.label}\n                    name={props.name}\n                    id={props.name}\n                    className={props.className}\n                    value={props.value}\n                    placeholder={props.placeholder}\n                    onChange={onChange}\n                />\n\n                {props.loading && <Spinner/>}\n\n                {description}\n            </div>\n        </Fragment>\n    )\n}\n","import { Button } from '@wordpress/components';\n\nexport const ToggleArrowButton = function (props) {\n    const onClick = function () {\n        if (props.onClick) {\n            props.onClick();\n        }\n    };\n\n    const iconExpanded = props.iconExpanded ? props.iconExpanded : 'arrow-up-alt2';\n    const iconCollapsed = props.iconCollapsed ? props.iconCollapsed : 'arrow-down-alt2';\n\n    const icon = props.isExpanded ? iconExpanded : iconCollapsed;\n\n    const title = props.isExpanded ? props.titleExpanded : props.titleCollapsed;\n\n    return (\n        <Button\n            isSmall\n            title={title}\n            icon={icon}\n            onClick={onClick}\n            className={props.className}\n        />\n    )\n}\n","import { ToggleArrowButton } from \"./ToggleArrowButton\";\nimport { DateTimePicker } from \"./DateTimePicker\";\nimport { Fragment, useEffect } from \"@wordpress/element\";\n\nexport const ToggleCalendarDatePicker = (\n    {\n        isExpanded,\n        strings,\n        onToggleCalendar,\n        currentDate,\n        onChangeDate,\n        is12Hour,\n        startOfWeek\n    }\n) => {\n    useEffect(() => {\n        // Move the element of the toggle button to between the time and date elements.\n        const toggleButtonElement = document.querySelector('.future-action-calendar-toggle');\n\n        if (! toggleButtonElement) {\n            return;\n        }\n\n        const dateTimeElement = toggleButtonElement.nextElementSibling;\n\n        if (! dateTimeElement) {\n            return;\n        }\n\n        const timeElement = dateTimeElement.querySelector('.components-datetime__time');\n\n        if (! timeElement) {\n            return;\n        }\n\n        const dateElement = timeElement.nextSibling;\n\n        if (! dateElement) {\n            return;\n        }\n\n        dateTimeElement.insertBefore(toggleButtonElement, dateElement)\n    });\n\n    return (\n        <Fragment>\n            <ToggleArrowButton\n                className=\"future-action-calendar-toggle\"\n                isExpanded={isExpanded}\n                iconExpanded=\"arrow-up-alt2\"\n                iconCollapsed=\"calendar\"\n                titleExpanded={strings.hideCalendar}\n                titleCollapsed={strings.showCalendar}\n                onClick={onToggleCalendar} />\n\n            <DateTimePicker\n                currentDate={currentDate}\n                onChange={onChangeDate}\n                __nextRemoveHelpButton={true}\n                is12Hour={is12Hour}\n                startOfWeek={startOfWeek}\n            />\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment, useState, useEffect } from \"@wordpress/element\";\nimport { FormTokenField } from \"@wordpress/components\";\n\nexport const TokensControl = (props) => {\n    const [stringValue, setStringValue] = useState('');\n\n    useEffect(() => {\n        if (props.value) {\n            setStringValue(props.value.join(','));\n        }\n    }, [props.value]);\n\n    let description;\n\n    if (props.description) {\n        if (props.unescapedDescription) {\n            // If using this option, the HTML has to be escaped before injected into the JS interface.\n            description = <p className=\"description\" dangerouslySetInnerHTML={{__html: props.description}}></p>;\n        } else {\n            description = <p className=\"description\">{props.description}</p>;\n        }\n    }\n\n    const onChange = (value) => {\n        if (props.onChange) {\n            props.onChange(value);\n        }\n\n        if (typeof value === 'object') {\n            setStringValue(value.join(','));\n        } else {\n            setStringValue('');\n        }\n    }\n\n    const value = props.value ? props.value : [];\n \n    return (\n        <Fragment>\n            <FormTokenField\n                label={props.label}\n                value={value}\n                suggestions={props.options}\n                onChange={onChange}\n                maxSuggestions={props.maxSuggestions}\n                className=\"publishpres-future-token-field\"\n                __experimentalExpandOnFocus={props.expandOnFocus}\n                __experimentalAutoSelectFirstMatch={props.autoSelectFirstMatch}\n            />\n            <input type=\"hidden\" name={props.name} value={stringValue} />\n\n            {description}\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const TrueFalseControl = function (props) {\n    const { Fragment } = wp.element;\n\n    const onChange = (e) => {\n        if (props.onChange) {\n            props.onChange(\n                e.target.value === props.trueValue && jQuery(e.target).is(':checked')\n            );\n            // Check only the true radio... using the field name? or directly the ID\n        }\n    };\n\n    return (\n        <Fragment>\n            <input\n                type=\"radio\"\n                name={props.name}\n                id={props.name + '-true'}\n                value={props.trueValue}\n                defaultChecked={props.selected}\n                onChange={onChange}\n            />\n\n            <label htmlFor={props.name + '-true'}>{props.trueLabel}</label>\n            &nbsp;&nbsp;\n            <input\n                type=\"radio\"\n                name={props.name}\n                defaultChecked={!props.selected}\n                id={props.name + '-false'}\n                value={props.falseValue}\n                onChange={onChange}\n            />\n            <label\n                htmlFor={props.name + '-false'}>{props.falseLabel}</label>\n\n            <p className=\"description\">{props.description}</p>\n        </Fragment>\n    )\n}\n","export { ButtonsPanel } from \"./ButtonsPanel\";\nexport { FutureActionPanel } from \"./FutureActionPanel\";\nexport { FutureActionPanelBlockEditor } from \"./FutureActionPanelBlockEditor\";\nexport { FutureActionPanelClassicEditor } from \"./FutureActionPanelClassicEditor\";\nexport { FutureActionPanelQuickEdit } from \"./FutureActionPanelQuickEdit\";\nexport { FutureActionPanelBulkEdit } from \"./FutureActionPanelBulkEdit\";\nexport { PostTypeSettingsPanel } from \"./PostTypeSettingsPanel\";\nexport { PostTypesSettingsPanels } from \"./PostTypesSettingsPanels\";\nexport { SettingRow } from \"./SettingRow\";\nexport { SettingsFieldset } from \"./SettingsFieldset\";\nexport { SettingsForm } from \"./SettingsForm\";\nexport { SettingsSection } from \"./SettingsSection\";\nexport { SettingsTable } from \"./SettingsTable\";\nexport { SubmitButton } from \"./SubmitButton\";\nexport { CheckboxControl } from \"./CheckboxControl\";\nexport { SelectControl } from \"./SelectControl\";\nexport { TextControl } from \"./TextControl\";\nexport { TokensControl } from \"./TokensControl\";\nexport { NonceControl } from \"./NonceControl\";\nexport { TrueFalseControl } from \"./TrueFalseControl\";\nexport { Spinner } from \"./Spinner\";\nexport { DateOffsetPreview } from \"./DateOffsetPreview\";\n","import { formatUnixTimeToTimestamp, getCurrentTimeAsTimestamp, normalizeUnixTimeToSeconds } from './time';\nimport { isNumber } from './utils';\nimport { register, createReduxStore } from '@wordpress/data';\n\nexport const createStore = (props) => {\n    if (props.defaultState.terms && typeof props.defaultState.terms === 'string') {\n        props.defaultState.terms = props.defaultState.terms.split(',').map(term => parseInt(term));\n    }\n\n    let defaultState = {\n        action: props.defaultState.action,\n        date: props.defaultState.date ? props.defaultState.date : getCurrentTimeAsTimestamp(),\n        enabled: props.defaultState.autoEnable,\n        terms: props.defaultState.terms ? props.defaultState.terms : [],\n        taxonomy: props.defaultState.taxonomy ? props.defaultState.taxonomy : null,\n        newStatus: props.defaultState.newStatus ? props.defaultState.newStatus : 'draft',\n        termsListByName: null,\n        termsListById: null,\n        taxonomyName: null,\n        isFetchingTerms: false,\n        changeAction: 'no-change',\n        calendarIsVisible: true,\n        hasValidData: true,\n        extraData: props.defaultState.extraData ? props.defaultState.extraData : {},\n    }\n\n    const store = createReduxStore(props.name, {\n        reducer(state = defaultState, action) {\n            switch (action.type) {\n                case 'SET_ACTION':\n                    return {\n                        ...state,\n                        action: action.action,\n                    };\n                case 'SET_NEW_STATUS':\n                    return {\n                        ...state,\n                        newStatus: action.newStatus,\n                    };\n                case 'SET_DATE':\n                    // Make sure the date is a number, if it is a string with only numbers\n                    if (typeof action.date !== 'number' && isNumber(action.date)) {\n                        action.date = parseInt(action.date);\n                    }\n\n                    // If string, convert to unix time\n                    if (typeof action.date === 'string') {\n                        action.date = new Date(action.date).getTime();\n                    }\n\n                    // Make sure the time is always in seconds\n                    action.date = normalizeUnixTimeToSeconds(action.date);\n\n                    // Convert to formated string format, considering it is in the site's timezone\n                    action.date = formatUnixTimeToTimestamp(action.date);\n\n                    return {\n                        ...state,\n                        date: action.date,\n                    }\n                case 'SET_ENABLED':\n                    return {\n                        ...state,\n                        enabled: action.enabled,\n                    }\n                case 'SET_TERMS':\n                    return {\n                        ...state,\n                        terms: action.terms,\n                    }\n                case 'SET_TAXONOMY':\n                    return {\n                        ...state,\n                        taxonomy: action.taxonomy,\n                    }\n                case 'SET_TERMS_LIST_BY_NAME':\n                    return {\n                        ...state,\n                        termsListByName: action.termsListByName,\n                    }\n                case 'SET_TERMS_LIST_BY_ID':\n                    return {\n                        ...state,\n                        termsListById: action.termsListById,\n                    }\n                case 'SET_TAXONOMY_NAME':\n                    return {\n                        ...state,\n                        taxonomyName: action.taxonomyName,\n                    }\n                case 'SET_CHANGE_ACTION':\n                    return {\n                        ...state,\n                        changeAction: action.changeAction,\n                    }\n                case 'SET_CALENDAR_IS_VISIBLE':\n                    return {\n                        ...state,\n                        calendarIsVisible: action.calendarIsVisible,\n                    }\n                case 'SET_HAS_VALID_DATA':\n                    return {\n                        ...state,\n                        hasValidData: action.hasValidData,\n                    }\n\n                case 'SET_EXTRA_DATA':\n                    return {\n                        ...state,\n                        extraData: {\n                            ...action.extraData,\n                        }\n                    }\n\n                case 'SET_EXTRA_DATA_BY_NAME':\n                    const extraData = {\n                        ...state.extraData,\n                        [action.name]: action.value\n                    };\n\n                    return {\n                        ...state,\n                        extraData: {...extraData}\n                    }\n            }\n\n            return state;\n        },\n        actions: {\n            setAction(action) {\n                return {\n                    type: 'SET_ACTION',\n                    action: action\n                };\n            },\n            setNewStatus(newStatus) {\n                return {\n                    type: 'SET_NEW_STATUS',\n                    newStatus: newStatus\n                };\n            },\n            setDate(date) {\n                return {\n                    type: 'SET_DATE',\n                    date: date\n                };\n            },\n            setEnabled(enabled) {\n                return {\n                    type: 'SET_ENABLED',\n                    enabled: enabled\n                };\n            },\n            setTerms(terms) {\n                return {\n                    type: 'SET_TERMS',\n                    terms: terms\n                };\n            },\n            setTaxonomy(taxonomy) {\n                return {\n                    type: 'SET_TAXONOMY',\n                    taxonomy: taxonomy\n                };\n            },\n            setTermsListByName(termsListByName) {\n                return {\n                    type: 'SET_TERMS_LIST_BY_NAME',\n                    termsListByName: termsListByName\n                };\n            },\n            setTermsListById(termsListById) {\n                return {\n                    type: 'SET_TERMS_LIST_BY_ID',\n                    termsListById: termsListById\n                };\n            },\n            setTaxonomyName(taxonomyName) {\n                return {\n                    type: 'SET_TAXONOMY_NAME',\n                    taxonomyName: taxonomyName\n                };\n            },\n            setIsFetchingTerms(isFetchingTerms) {\n                return {\n                    type: 'SET_IS_FETCHING_TERMS',\n                    isFetchingTerms: isFetchingTerms\n                }\n            },\n            setChangeAction(changeAction) {\n                return {\n                    type: 'SET_CHANGE_ACTION',\n                    changeAction: changeAction\n                }\n            },\n            setCalendarIsVisible(calendarIsVisible) {\n                return {\n                    type: 'SET_CALENDAR_IS_VISIBLE',\n                    calendarIsVisible: calendarIsVisible\n                }\n            },\n            setHasValidData(hasValidData) {\n                return {\n                    type: 'SET_HAS_VALID_DATA',\n                    hasValidData: hasValidData\n                }\n            },\n            setExtraData(extraData) {\n                return {\n                    type: 'SET_EXTRA_DATA',\n                    extraData: extraData\n                }\n            },\n            setExtraDataByName(name, value) {\n                return {\n                    type: 'SET_EXTRA_DATA_BY_NAME',\n                    name: name,\n                    value: value\n                }\n            }\n        },\n        selectors: {\n            getAction(state) {\n                return state.action;\n            },\n            getNewStatus(state) {\n                return state.newStatus;\n            },\n            getDate(state) {\n                return state.date;\n            },\n            getEnabled(state) {\n                return state.enabled;\n            },\n            getTerms(state) {\n                return state.terms;\n            },\n            getTaxonomy(state) {\n                return state.taxonomy;\n            },\n            getTermsListByName(state) {\n                return state.termsListByName;\n            },\n            getTermsListById(state) {\n                return state.termsListById;\n            },\n            getTaxonomyName(state) {\n                return state.taxonomyName;\n            },\n            getIsFetchingTerms(state) {\n                return state.isFetchingTerms;\n            },\n            getChangeAction(state) {\n                return state.changeAction;\n            },\n            getCalendarIsVisible(state) {\n                return state.calendarIsVisible;\n            },\n            getHasValidData(state) {\n                return state.hasValidData;\n            },\n            getExtraData(state) {\n                return state.extraData;\n            },\n            getExtraDataByName(state, name) {\n                return state.extraData[name] || null;\n            }\n        }\n    });\n\n    register(store);\n\n    return store;\n}\n","export const getCurrentTimeInSeconds = () => {\n    return normalizeUnixTimeToSeconds(new Date().getTime());\n}\n\nexport const getCurrentTimeAsTimestamp = () => {\n    return formatUnixTimeToTimestamp(getCurrentTimeInSeconds());\n}\n\nexport const formatUnixTimeToTimestamp = (unixTimestamp) => {\n    const date = new Date(\n        normalizeUnixTimeToSeconds(unixTimestamp)\n    );\n\n    const year = date.getFullYear();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2); // Months are zero-based\n    const day = (\"0\" + date.getDate()).slice(-2);\n    const hours = (\"0\" + date.getHours()).slice(-2);\n    const minutes = (\"0\" + date.getMinutes()).slice(-2);\n    const seconds = (\"0\" + date.getSeconds()).slice(-2);\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n\nexport const formatTimestampToUnixTime = (time) => {\n    const date = new Date(time);\n\n    return normalizeUnixTimeToSeconds(date.getTime());\n}\n\nexport const timeIsInSeconds = (time) => {\n    return parseInt(time).toString().length <= 10;\n}\n\nexport const normalizeUnixTimeToSeconds = (time) => {\n    time = parseInt(time);\n\n    return timeIsInSeconds() ? time : time / 1000;\n}\n\nexport const normalizeUnixTimeToMilliseconds = (time) => {\n    time = parseInt(time);\n\n    return timeIsInSeconds() ? time * 1000 : time;\n}\n","export const compact = (array) => {\n    if (!array) {\n        return [];\n    }\n\n    if (! Array.isArray(array) && typeof array === 'object') {\n        array = Object.values(array);\n    }\n\n    return array.filter((item) => {\n        return item !== null && item !== undefined && item !== '';\n    });\n}\n\nexport const debugLogFactory = (config) => {\n    return (description, ...message) => {\n        if (console && config.isDebugEnabled) {\n            console.debug('[Future]', description, ...message);\n        }\n    }\n}\n\nexport const isGutenbergEnabled = () => {\n    return document.body.classList.contains('block-editor-page');\n}\n\nexport const getElementByName = (name) => {\n    return document.getElementsByName(name)[0];\n}\n\nexport const getFieldByName = (name, postId) => {\n    return document.querySelector(`#the-list tr#post-${postId} .column-expirationdate input#future_action_${name}-${postId}`);\n}\n\nexport const getFieldValueByName = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field) {\n        return null;\n    }\n\n    return field.value;\n};\n\nexport const getFieldValueByNameAsArrayOfInt = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field || !field.value) {\n        return [];\n    }\n\n    if (typeof field.value === 'number') {\n        field.value = field.value.toString();\n    }\n\n    return field.value.split(',').map(term => parseInt(term));\n};\n\nexport const getFieldValueByNameAsBool = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field) {\n        return false;\n    }\n\n    return field.value === '1' || field.value === 'true';\n}\n\nexport const getActionSettingsFromColumnData = (postId) => {\n    const columnData = document.querySelector(`#post-expire-column-${postId}`);\n\n    if (!columnData) {\n        return {};\n    }\n\n    return {\n        enabled: columnData.dataset.actionEnabled === '1',\n        action: columnData.dataset.actionType,\n        date: columnData.dataset.actionDate,\n        dateUnix: columnData.dataset.actionDateUnix,\n        taxonomy: columnData.dataset.actionTaxonomy,\n        terms: columnData.dataset.actionTerms,\n        newStatus: columnData.dataset.actionNewStatus,\n    };\n}\n\n/**\n * This function is used to determine if a value is a number, including strings.\n *\n * @param {*} value\n * @returns\n */\nexport const isNumber = (value) => {\n    return !isNaN(value);\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.publishpress-future-date-preview .publishpress-future-date-preview-value {\n    font-family: monospace;\n    background-color: #e7e7e7;\n    padding: 2px 4px;\n}\n\n.publishpress-future-date-preview.compact .publishpress-future-date-preview-label {\n    display: block;\n}\n\n.publishpress-future-date-preview.compact {\n    margin-bottom: 8px;\n}\n\n.publishpress-future-date-preview.compact h4 {\n    font-size: 11px;\n    font-weight: 500;\n    line-height: 1.4;\n    text-transform: uppercase;\n    display: inline-block;\n    margin-bottom: calc(8px);\n    padding: 0px;\n    flex-shrink: 0;\n    margin-right: 12px;\n    max-width: 75%;\n    margin-top: 0;\n}\n\n.publishpress-future-notice.publishpress-future-notice-error {\n    color: #dc3232;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./assets/jsx/components/css/dateOffsetPreview.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,sBAAsB;IACtB,yBAAyB;IACzB,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,gBAAgB;IAChB,yBAAyB;IACzB,qBAAqB;IACrB,wBAAwB;IACxB,YAAY;IACZ,cAAc;IACd,kBAAkB;IAClB,cAAc;IACd,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB\",\"sourcesContent\":[\".publishpress-future-date-preview .publishpress-future-date-preview-value {\\n    font-family: monospace;\\n    background-color: #e7e7e7;\\n    padding: 2px 4px;\\n}\\n\\n.publishpress-future-date-preview.compact .publishpress-future-date-preview-label {\\n    display: block;\\n}\\n\\n.publishpress-future-date-preview.compact {\\n    margin-bottom: 8px;\\n}\\n\\n.publishpress-future-date-preview.compact h4 {\\n    font-size: 11px;\\n    font-weight: 500;\\n    line-height: 1.4;\\n    text-transform: uppercase;\\n    display: inline-block;\\n    margin-bottom: calc(8px);\\n    padding: 0px;\\n    flex-shrink: 0;\\n    margin-right: 12px;\\n    max-width: 75%;\\n    margin-top: 0;\\n}\\n\\n.publishpress-future-notice.publishpress-future-notice-error {\\n    color: #dc3232;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js!./dateOffsetPreview.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js!./dateOffsetPreview.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","module.exports = ReactDOM;","module.exports = publishpressFutureBulkEditConfig;","module.exports = window;","module.exports = wp;","module.exports = wp.components;","module.exports = wp.data;","module.exports = wp.element;","module.exports = wp.hooks;","module.exports = wp.plugins;","module.exports = wp.url;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","import { FutureActionPanelBulkEdit } from './components';\nimport { createStore } from './data';\nimport { createRoot } from 'react-dom/client';\nimport { select, dispatch } from '@wordpress/data';\nimport { inlineEditPost } from \"&window\";\nimport {\n    postTypeDefaultConfig,\n    defaultDate,\n    postType,\n    isNewPost,\n    actionsSelectOptions,\n    is12Hour,\n    timeFormat,\n    startOfWeek,\n    strings,\n    taxonomyName,\n    nonce,\n    statusesSelectOptions,\n    hideCalendarByDefault\n} from \"&config.bulk-edit\";\n\nconst storeName = 'publishpress-future/future-action-bulk-edit';\nconst delayToUnmountAfterSaving = 1000;\n\n// We create a copy of the WP inline set bulk function\nconst wpInlineSetBulk = inlineEditPost.setBulk;\nconst wpInlineEditRevert = inlineEditPost.revert;\n\nconst getPostId = (id) => {\n    // If id is a string or a number, return it directly\n    if (typeof id === 'string' || typeof id === 'number') {\n        return id;\n    }\n\n    // Otherwise, assume it's an HTML element and extract the post ID\n    const trElement = id.closest('tr');\n    const trId = trElement.id;\n    const postId = trId.split('-')[1];\n\n    return postId;\n}\n\n/**\n * We override the function with our own code so we can detect when\n * the inline edit row is displayed to recreate the React component.\n */\ninlineEditPost.setBulk = function (id) {\n    // Call the original WP edit function.\n    wpInlineSetBulk.apply(this, arguments);\n\n    if (select(storeName)) {\n        dispatch(storeName).setAction(postTypeDefaultConfig.expireType);\n        dispatch(storeName).setDate(postTypeDefaultConfig.defaultDate);\n        dispatch(storeName).setTaxonomy(postTypeDefaultConfig.taxonomy);\n        dispatch(storeName).setTerms(postTypeDefaultConfig.terms);\n        dispatch(storeName).setChangeAction('no-change');\n    } else {\n        createStore({\n            name: storeName,\n            defaultState: {\n                action: postTypeDefaultConfig.expireType,\n                newStatus: postTypeDefaultConfig.newStatus,\n                date: defaultDate,\n                taxonomy: postTypeDefaultConfig.taxonomy,\n                terms: postTypeDefaultConfig.terms,\n                changeAction: 'no-change',\n            }\n        });\n    }\n\n    const container = document.getElementById(\"publishpress-future-bulk-edit\");\n    const root = createRoot(container);\n\n    const saveButton = document.querySelector('#bulk_edit');\n    if (saveButton) {\n        saveButton.onclick = function() {\n            setTimeout(() => {\n                root.unmount();\n            }, delayToUnmountAfterSaving);\n        };\n    }\n\n    const component = (\n        <FutureActionPanelBulkEdit\n            storeName={storeName}\n            postType={postType}\n            isNewPost={isNewPost}\n            actionsSelectOptions={actionsSelectOptions}\n            statusesSelectOptions={statusesSelectOptions}\n            is12Hour={is12Hour}\n            timeFormat={timeFormat}\n            startOfWeek={startOfWeek}\n            strings={strings}\n            taxonomyName={taxonomyName}\n            nonce={nonce}\n            hideCalendarByDefault={hideCalendarByDefault}\n        />\n    );\n\n    root.render(component);\n\n    inlineEditPost.revert = function () {\n        root.unmount();\n\n        // Call the original WP revert function.\n        wpInlineEditRevert.apply(this, arguments);\n    };\n};\n"],"names":["ButtonsPanel","props","children","CheckboxControl","description","useState","checked","setChecked","unescapedDescription","className","dangerouslySetInnerHTML","__html","Fragment","label","name","id","onChange","value","require","DateOffsetPreview","offset","labelDatePreview","labelOffsetPreview","setValidationErrorCallback","setHasPendingValidationCallback","setHasValidDataCallback","compactView","offsetPreview","setOffsetPreview","currentTime","setCurrentTime","apiRequestControllerRef","useRef","AbortController","useEffect","controller","current","abort","signal","apiFetch","path","addQueryArgs","method","data","then","result","isValid","message","preview","catch","error","validateDateOffset","compactClass","DateTimePicker","currentDate","is12Hour","startOfWeek","normalizeUnixTimeToMilliseconds","__nextRemoveHelpButton","wp","components","PanelRow","SelectControl","FormTokenField","Spinner","BaseControl","element","decodeEntities","htmlEntities","url","useSelect","useDispatch","FutureActionPanel","select","action","storeName","getAction","date","getDate","enabled","getEnabled","terms","getTerms","taxonomy","getTaxonomy","taxonomyName","getTaxonomyName","termsListByName","getTermsListByName","termsListById","getTermsListById","isFetchingTerms","getIsFetchingTerms","calendarIsVisible","getCalendarIsVisible","hasValidData","getHasValidData","newStatus","getNewStatus","validationError","setValidationError","setAction","setDate","setEnabled","setTerms","setTaxonomy","setTermsListByName","setTermsListById","setTaxonomyName","setIsFetchingTerms","setCalendarIsVisible","setHasValidData","setNewStatus","insertTerm","term","count","link","slug","callOnChangeData","attribute","onChangeData","handleEnabledChange","isChecked","fetchTerms","forEach","getCalendarIsVisibleFromStorage","localStorage","getItem","context","autoEnableAndHideCheckbox","hideCalendarByDefault","isCleanNewPost","setItem","onDataIsValid","onDataIsInvalid","selectedTerms","length","compact","map","mapTermsListById","termsListByNameKeys","Object","keys","is24hour","panelClass","contentPanelClass","datePanelClass","timeFormat","actionsSelectOptions","filter","item","indexOf","HelpText","string","href","target","parts","split","push","shift","before","after","key","replaceCurlyBracketsWithLink","strings","timezoneSettingsHelp","displayTaxonomyField","String","includes","termsFieldLabel","newTerms","replace","removeTerms","addTerms","valid","errorActionRequired","errorDateRequired","Date","errorDateInPast","isTermRequired","noTermIsSelected","errorTermsRequired","validateData","SlotFillProvider","type","FutureActionPanelTop","Slot","fillProps","enablePostExpiration","options","FutureActionPanelAfterActionField","statusesSelectOptions","loading","noTaxonomyFound","noTermsFound","suggestions","mapTermsListByName","placeholder","addTermsPlaceholder","maxSuggestions","onFocus","e","jQuery","addClass","__experimentalExpandOnFocus","__experimentalAutoSelectFirstMatch","ToggleCalendarDatePicker","onChangeDate","onToggleCalendar","isExpanded","PluginArea","scope","Fill","FutureActionPanelBlockEditor","PluginDocumentSettingPanel","editPost","getEditedPostAttribute","lockPostSaving","unlockPostSaving","title","panelTitle","initialOpen","postTypeDefaultConfig","autoEnable","postType","store","newAttribute","getExtraData","publishpress_future_action","entries","editPostAttribute","FutureActionPanelBulkEdit","changeAction","getChangeAction","setChangeAction","termsString","join","noChange","changeAdd","addOnly","changeOnly","removeOnly","prop","futureActionUpdate","isNewPost","getElementByName","nonce","FutureActionPanelClassicEditor","getTimezoneOffset","document","getElementsByName","getElementValueByName","parseInt","getTermsFromElementByName","FutureActionPanelQuickEdit","NonceControl","referrer","PostTypeSettingsPanel","originalExpireTypeList","expireTypeList","settings","postTypeTaxonomy","setPostTypeTaxonomy","termOptions","setTermOptions","termsSelectIsLoading","setTermsSelectIsLoading","setSelectedTerms","howToExpire","settingHowToExpire","setSettingHowToExpire","active","isActive","setIsActive","defaultExpireOffset","expireOffset","setExpireOffset","emailNotification","setEmailNotification","autoEnabled","isAutoEnabled","setIsAutoEnabled","taxonomyLabel","setTaxonomyLabel","howToExpireList","setHowToExpireList","hasPendingValidation","setHasPendingValidation","globalDefaultExpireOffset","taxonomyRelatedActions","newExpireTypeList","taxonomiesList","settingsTermsOptions","option","expireType","toLowerCase","onValidationStarted","onValidationFinished","termOptionsLabels","settingsRows","SettingRow","text","fieldActive","fieldActiveLabel","fieldAutoEnable","fieldAutoEnableLabel","fieldTaxonomy","selected","noItemFoundMessage","noItemsfound","fieldTaxonomyDescription","fieldHowToExpire","fieldHowToExpireDescription","statusesList","TokensControl","fieldTerm","isLoading","fieldTermDescription","expandOnFocus","autoSelectFirstMatch","fieldDefaultDateTimeOffset","TextControl","fieldDefaultDateTimeOffsetDescription","datePreview","datePreviewCurrent","datePreviewComputed","fieldWhoToNotify","fieldWhoToNotifyDescription","applyFilters","fieldSetClassNames","isVisible","SettingsTable","bodyChildren","PostTypesSettingsPanels","currentTab","setCurrentTab","panels","postTypeSettings","legend","onSelectTab","event","preventDefault","hash","tabs","onClick","valign","htmlFor","SettingsFieldset","SettingsForm","SettingsSection","SubmitButton","disabled","ToggleArrowButton","iconExpanded","iconCollapsed","icon","titleExpanded","titleCollapsed","Button","isSmall","toggleButtonElement","querySelector","dateTimeElement","nextElementSibling","timeElement","dateElement","nextSibling","insertBefore","hideCalendar","showCalendar","stringValue","setStringValue","TrueFalseControl","trueValue","is","defaultChecked","trueLabel","falseValue","falseLabel","createStore","defaultState","getCurrentTimeAsTimestamp","extraData","createReduxStore","reducer","state","isNumber","getTime","normalizeUnixTimeToSeconds","formatUnixTimeToTimestamp","actions","setExtraData","setExtraDataByName","selectors","getExtraDataByName","register","getCurrentTimeInSeconds","unixTimestamp","getFullYear","getMonth","slice","getHours","getMinutes","getSeconds","timeIsInSeconds","formatTimestampToUnixTime","time","toString","getFieldByName","array","Array","isArray","values","debugLogFactory","config","console","isDebugEnabled","debug","isGutenbergEnabled","body","classList","contains","postId","getFieldValueByName","field","getFieldValueByNameAsArrayOfInt","getFieldValueByNameAsBool","getActionSettingsFromColumnData","columnData","dataset","actionEnabled","actionType","actionDate","dateUnix","actionDateUnix","actionTaxonomy","actionTerms","actionNewStatus","isNaN","___CSS_LOADER_EXPORT___","module","exports","cssWithMappingToString","list","this","content","needLayer","concat","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","sourceMapping","m","createRoot","hydrateRoot","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","stylesInDOM","getIndexByIdentifier","identifier","modulesToDom","idCountMap","identifiers","base","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","style","styleTarget","window","HTMLIFrameElement","contentDocument","head","getTarget","Error","appendChild","createElement","attributes","styleElement","setAttribute","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","ReactDOM","publishpressFutureBulkEditConfig","hooks","plugins","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","prototype","hasOwnProperty","call","r","Symbol","toStringTag","nc","wpInlineSetBulk","inlineEditPost","setBulk","wpInlineEditRevert","revert","arguments","dispatch","defaultDate","container","getElementById","root","saveButton","onclick","setTimeout","unmount","component","render"],"sourceRoot":""}